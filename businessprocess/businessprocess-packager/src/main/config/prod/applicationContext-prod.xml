<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<import resource="classpath:/META-INF/spring/applicationContextTracage-prod.xml" />
	<!-- This will automatically locate any and all property files you have 
		within your classpath, provided they fall under the META-INF/spring directory. 
		The located property files are parsed and their values can then be used within 
		application context files in the form of ${propertyKey}. -->
	<context:property-placeholder location="classpath*:META-INF/spring/*.properties" />
	<context:component-scan
		base-package="com.nordnet.topaze.businessprocess.packager.service" />
	<context:component-scan base-package="com.nordnet.topaze.client.rest" />
	<context:component-scan
		base-package="com.nordnet.topaze.businessprocess.packager.mock" />
	<context:component-scan
		base-package="com.nordnet.topaze.businessprocess.packager.adapter" />

	<!-- Load Hibernate related configuration -->
	<import resource="hibernate-context.xml" />

	<!-- Load activeMQ related configuration -->
	<import resource="activemq-context.xml" />

	<!-- Load Quartz related configuration -->
	<import resource="quartz-context.xml" />

	<context:component-scan
		base-package="com.nordnet.topaze.businessprocess.packager.mock" />

	<bean id="restURLProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:rest-url.properties" />
	</bean>

	<bean class="org.springframework.web.client.RestTemplate">
		<property name="errorHandler">
			<bean class="com.nordnet.topaze.client.rest.RestClientResponseErrorHandler" />
		</property>
	</bean>

	<bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper" />

	<bean id="topazeExceptionsProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:topaze-exceptions.properties" />
	</bean>

	<bean id="packagerProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:packager.properties" />
	</bean>

	<!-- Bean d'acces au Contexte -->
	<bean id="applicationContextHolder"
		class="com.nordnet.topaze.businessprocess.packager.util.spring.ApplicationContextHolder" />

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">file</prop>
				<prop key="file.resource.loader.class">org.apache.velocity.runtime.resource.loader.FileResourceLoader
				</prop>
				<prop key="file.resource.loader.path">${templatePathFolder}</prop>
			</props>
		</property>
	</bean>

	<bean id="dynamicProperties"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- check property file(s) every 1 second -->
		<property name="cacheSeconds" value="1" />
		<property name="basenames">
			<list>
				<value>file:${dynamic.properties}</value>
			</list>
		</property>
	</bean>

	<bean id="log4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>classpath:/log4j.xml</value>
			</list>
		</property>
	</bean>

	<bean id="sendAlert" class="com.nordnet.common.alert.ws.client.SendAlert">
		<property name="url">
			<value>${sendAlertServiceUrl}</value>
		</property>
	</bean>


</beans>