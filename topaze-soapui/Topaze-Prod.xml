<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="Topaze - Prod" resourceRoot="" soapui-version="4.6.4" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config">
	<con:settings/>
	<con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://si2-srv.si-core.nordnet.fr:8080" type="rest" id="104ac999-b606-4df7-b795-22b8b074cc04" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:settings/>
		<con:endpoints>
			<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		</con:endpoints>
		<con:resource name="" path="/contrat-core/contrat/" id="8cdbd877-9103-400d-8271-f6d9f4fba970">
			<con:settings/>
			<con:parameters/>
			<con:resource name="preparer" path="preparer" id="9a6fa0c1-86c8-413e-97d3-3eebe4381ebb">
				<con:settings/>
				<con:parameters/>
				<con:method name="Method 1" method="POST" id="a2109920-4351-4a13-be01-3deb363c1596">
					<con:settings/>
					<con:parameters/>
					<con:representation type="REQUEST">
						<con:mediaType>application/json</con:mediaType>
						<con:params/>
					</con:representation>
					<con:representation type="FAULT">
						<con:mediaType>application/json</con:mediaType>
						<con:status>500</con:status>
						<con:params/>
						<con:element xmlns:prep="http://si2-srv.si-core.nordnet.fr/contrat-core/contrat/preparer">prep:Fault</con:element>
					</con:representation>
					<con:representation type="RESPONSE">
						<con:mediaType>application/json</con:mediaType>
						<con:status>200</con:status>
						<con:params/>
						<con:element xmlns:prep="http://si2-srv.si-core.nordnet.fr/contrat-core/contrat/preparer">prep:Response</con:element>
					</con:representation>
					<con:representation type="FAULT">
						<con:mediaType>text/html;charset=utf-8</con:mediaType>
						<con:status>500</con:status>
						<con:params/>
						<con:element>html</con:element>
					</con:representation>
					<con:representation type="RESPONSE">
						<con:mediaType xsi:nil="true"/>
						<con:status>0</con:status>
						<con:params/>
						<con:element>data</con:element>
					</con:representation>
					<con:request name="Jet" mediaType="application/json" postQueryString="false" id="5274a996-34a4-4d93-971e-80bebea23e8b">
						<con:settings>
							<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
				</con:settings>
				<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
				<con:request>{
 "user": "test",
 "produits": [
{
      "reference": "jet",
      "numeroCommande": "12345",
      "label": "Abonnement jet 10Go",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": "1",
        "typeTVA": "R",
        "montant": "30",
        "frais": [
          {
            "montant": "30",
            "typeFrais": "creation"
          }
        ],
        "modePaiement": "SEPA",
        "modeFacturation": "PREMIER_MOIS"
      }
    },
    {
      "reference": "option.plus.50g",
      "refProduitParent": "jet",
      "numeroCommande": "12345",
      "label": "Option+ 50Go",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": "1",
        "typeTVA": "R",
        "montant": "50",
        "frais": [
          {
            "montant": "50",
            "typeFrais": "resiliation",
            "nombreMois": "12",
            "ordre": "1"
          },
          {
            "montant": "30",
            "typeFrais": "resiliation",
            "ordre": "2"
          }
        ],
        "modePaiement": "SEPA",
        "modeFacturation": "PREMIER_MOIS"
      }
    },
    {
      "reference": "kit-sat",
      "refProduitParent": "jet",
      "numeroCommande": "12345",
      "label": "Kit Satellite Jet",
      "typeProduit": "BIEN",
      "prix": {
        "engagement" : "24",
        "duree" : "48",
        "periodicite" : "3",
        "typeTVA": "R",
        "montant": "30",
        "modePaiement": "SEPA",
        "modeFacturation": "PREMIER_MOIS"
      }
    }
  ]
}</con:request>
				<con:credentials>
					<con:authType>Global HTTP Settings</con:authType>
				</con:credentials>
				<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
				<con:jmsPropertyConfig/>
				<con:parameters/>
			</con:request>
			<con:request name="avfw.essentiel" mediaType="application/json" postQueryString="false" id="5bc29da1-a7ef-444c-b27f-1d728716c2cc">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "user": "test",
  "produits": [
    {
      "numEC" : 1,
      "reference": "avfw.essentiel",
      "numeroCommande": "12345",
      "label": "Antivirus Securitoo",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": 1,
        "typeTVA": "R",
        "montant": 4.17,
        "modePaiement": "SEPA",
        "modeFacturation": "DATE_ANNIVERSAIRE"
      }
    }
  ]
}</con:request>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters/>
	</con:request>
	<con:request name="avfw.confort" mediaType="application/json" postQueryString="false" id="d08205e5-89bb-45ff-89b0-50a89749940c">
		<con:settings>
			<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
</con:settings>
<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
<con:request>{
  "user": "test",
  "produits": [
    {
      "numEC" : 1,
      "reference": "avfw.confort",
      "numeroCommande": "12345",
      "label": "Antivirus Securitoo",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": 1,
        "typeTVA": "R",
        "montant": 4.17,
        "modePaiement": "SEPA",
        "modeFacturation": "DATE_ANNIVERSAIRE"
      }
    }
  ]
}</con:request>
<con:credentials>
	<con:authType>Global HTTP Settings</con:authType>
</con:credentials>
<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
<con:jmsPropertyConfig/>
<con:parameters/>
</con:request>
<con:request name="avfw.prestige" mediaType="application/json" postQueryString="false" id="835760e3-53b5-49db-a1f6-0be7cab520f8">
	<con:settings>
		<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
</con:settings>
<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
<con:request>{
  "user": "test",
  "produits": [
    {
      "numEC" : 1,
      "reference": "avfw.confort",
      "numeroCommande": "12345",
      "label": "Antivirus Securitoo",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": 1,
        "typeTVA": "R",
        "montant": 4.17,
        "modePaiement": "SEPA",
        "modeFacturation": "DATE_ANNIVERSAIRE"
      }
    }
  ]
}</con:request>
<con:credentials>
	<con:authType>Global HTTP Settings</con:authType>
</con:credentials>
<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
<con:jmsPropertyConfig/>
<con:parameters/>
</con:request>
</con:method>
</con:resource>
<con:resource name="gÃ©rer" path="{refContrat}/" id="44f2a7f0-865c-43ce-a20c-ac142e6be64c">
	<con:settings/>
	<con:parameters>
		<con:parameter>
			<con:name>refContrat</con:name>
			<con:value>refContrat</con:value>
			<con:style>TEMPLATE</con:style>
			<con:default>refContrat</con:default>
		</con:parameter>
	</con:parameters>
	<con:resource name="valider" path="valider" id="e7cb3cdc-d436-4649-aef9-82677867b8fa">
		<con:settings/>
		<con:parameters/>
		<con:method name="Method 1" method="POST" id="49e182c9-a544-42ce-9ff7-3dded43b2feb">
			<con:settings/>
			<con:parameters/>
			<con:representation type="FAULT">
				<con:mediaType>application/json</con:mediaType>
				<con:status>500</con:status>
				<con:params/>
				<con:element xmlns:val="http://si2-srv.si-core.nordnet.fr/contrat-core/contrat/00000002/valider">val:Fault</con:element>
			</con:representation>
			<con:representation type="REQUEST">
				<con:mediaType>application/json</con:mediaType>
				<con:params/>
			</con:representation>
			<con:representation type="FAULT">
				<con:mediaType>text/html;charset=utf-8</con:mediaType>
				<con:status>400</con:status>
				<con:params/>
				<con:element>html</con:element>
			</con:representation>
			<con:representation type="RESPONSE">
				<con:mediaType xsi:nil="true"/>
				<con:status>200</con:status>
				<con:params/>
				<con:element>data</con:element>
			</con:representation>
			<con:representation type="RESPONSE">
				<con:mediaType xsi:nil="true"/>
				<con:status>200</con:status>
				<con:params/>
				<con:element>data</con:element>
			</con:representation>
			<con:representation type="RESPONSE">
				<con:mediaType xsi:nil="true"/>
				<con:status>200</con:status>
				<con:params/>
				<con:element>data</con:element>
			</con:representation>
			<con:representation type="RESPONSE">
				<con:mediaType xsi:nil="true"/>
				<con:status>200</con:status>
				<con:params/>
				<con:element>data</con:element>
			</con:representation>
			<con:representation type="RESPONSE">
				<con:mediaType xsi:nil="true"/>
				<con:status>200</con:status>
				<con:params/>
				<con:element>data</con:element>
			</con:representation>
			<con:request name="Jet" mediaType="application/json" postQueryString="false" id="437dc6cf-1e27-440d-b9c4-4bdee81c4e62">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "user": "SoapUITest",
  "idClient": "00131",
  "idAdrFacturation": "685",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "referenceProduit": "jet",
      "referenceModePaiement": "R0000012",
      "idAdrLivraison": "adrliv1"
    },
    {
      "referenceProduit": "option.plus.50g",
      "referenceModePaiement": "R0000012",
      "idAdrLivraison": "adrliv1"
    },
    {
      "referenceProduit": "kit-sat",
      "referenceModePaiement": "R0000012",
      "idAdrLivraison": "adrliv1"
    }
  ],
  "politiqueValidation": 
  {
  	"fraisCreation": "true",
  	"checkIsPackagerCreationPossible" : "true"
  }
}</con:request>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters/>
	</con:request>
	<con:request name="avfw.essentiel" mediaType="application/json" postQueryString="false" id="538e9ee8-e433-4410-95ca-ac679d46c4aa">
		<con:settings>
			<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
</con:settings>
<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
<con:request>{
  "user": "SoapUITest",
  "idClient": "00131",
  "idAdrFacturation": "adrFact1",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "numEC": 1,
      "referenceProduit": "avfw.essentiel",
      "idAdrLivraison": "adrLiv1",
      "referenceModePaiement": "SEPA"
    }
  ],
  "politiqueValidation": {
    "fraisCreation": true,
    "checkIsPackagerCreationPossible": true
  }
}</con:request>
<con:credentials>
	<con:authType>Global HTTP Settings</con:authType>
</con:credentials>
<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
<con:jmsPropertyConfig/>
<con:parameters>
	<entry key="refContrat" value="${#TestCase#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
</con:parameters>
</con:request>
<con:request name="avfw.confort" mediaType="application/json" postQueryString="false" id="5cba24c0-55da-46f0-8e25-a8cf6a1b71cf">
	<con:settings>
		<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
</con:settings>
<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
<con:request>{
  "user": "SoapUITest",
  "idClient": "00131",
  "idAdrFacturation": "adrFact1",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "numEC": 1,
      "referenceProduit": "avfw.confort",
      "idAdrLivraison": "adrLiv1",
      "referenceModePaiement": "SEPA"
    }
  ],
  "politiqueValidation": {
    "fraisCreation": true,
    "checkIsPackagerCreationPossible": true
  }
}</con:request>
<con:credentials>
	<con:authType>Global HTTP Settings</con:authType>
</con:credentials>
<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
<con:jmsPropertyConfig/>
<con:parameters>
	<entry key="refContrat" value="${#TestCase#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
</con:parameters>
</con:request>
<con:request name="avfw.prestige" mediaType="application/json" postQueryString="false" id="7182bc32-657f-4243-80b2-9c70ac10f339">
	<con:settings>
		<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
</con:settings>
<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
<con:request>{
  "user": "SoapUITest",
  "idClient": "00131",
  "idAdrFacturation": "adrFact1",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "numEC": 1,
      "referenceProduit": "avfw.prestige",
      "idAdrLivraison": "adrLiv1",
      "referenceModePaiement": "SEPA"
    }
  ],
  "politiqueValidation": {
    "fraisCreation": true,
    "checkIsPackagerCreationPossible": true
  }
}</con:request>
<con:credentials>
	<con:authType>Global HTTP Settings</con:authType>
</con:credentials>
<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
<con:jmsPropertyConfig/>
<con:parameters>
	<entry key="refContrat" value="" xmlns="http://eviware.com/soapui/config"/>
</con:parameters>
</con:request>
</con:method>
</con:resource>
<con:resource name="resilier" path="resilier" id="c6f3b9e7-2619-41c6-aa47-6ffb76ef33f8">
	<con:settings/>
	<con:parameters/>
	<con:method name="Method 1" method="POST" id="2ca4505b-e873-4cb3-af53-aa2bcc03de13">
		<con:settings/>
		<con:parameters/>
		<con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:request name="Resilier Contrat" mediaType="application/json" postQueryString="false" id="cfff82ba-6c5b-441b-bf3a-cc2c25dfbf93">
			<con:settings>
				<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
	</con:settings>
	<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
	<con:request>{
  "politiqueResiliation": {
    "typeResiliation": {},
    "motif": {},
    "commentaire": "string",
    "fraisResiliation": false,
    "montantResiliation": "double",
    "remboursement": false,
    "montantRemboursement": "double",
    "penalite": false
    "dateResiliation": "string",
  },
  "user": "string"
}</con:request>
	<con:credentials>
		<con:authType>Global HTTP Settings</con:authType>
	</con:credentials>
	<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
	<con:jmsPropertyConfig/>
	<con:parameters>
		<entry key="refContrat" value="" xmlns="http://eviware.com/soapui/config"/>
	</con:parameters>
</con:request>
</con:method>
</con:resource>
<con:resource name="renouveler" path="renouveler" id="955a4ab9-d0b9-43c0-bd4b-a8a444725535">
	<con:settings/>
	<con:parameters/>
	<con:method name="Method 1" method="POST" id="c772a4f7-dbf9-4a7b-aa68-766f4a22a6d4">
		<con:settings/>
		<con:parameters/>
		<con:request name="Request 1" mediaType="application/json" postQueryString="false" id="e303d651-74c1-4f1d-962e-26e35415587e">
			<con:settings>
				<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
	</con:settings>
	<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
	<con:request>{
  "politiqueRenouvellement": {
    "conserverAncienneReduction": false,
    "force": false
  },
  "produitRenouvellements": [
    {
      "remboursable": false,
      "typeProduit": {},
      "prix": {
        "periodicite": 0,
        "montant": "double",
        "referenceModePaiement": "string",
        "modeFacturation": {},
        "typeTVA": {},
        "duree": 0,
        "frais": [
          {
            "montant": "double",
            "nombreMois": 0,
            "ordre": 0,
            "typeFrais": {}
          }
        ],
        "modePaiement": {}
      },
      "referenceProduit": "string",
      "label": "string",
      "numeroCommande": "string",
      "numEC": 0,
      "numECParent": 0
    }
  ],
  "user": "SoapUITest"
}</con:request>
	<con:credentials>
		<con:authType>Global HTTP Settings</con:authType>
	</con:credentials>
	<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
	<con:jmsPropertyConfig/>
	<con:parameters>
		<entry key="refContrat" value="" xmlns="http://eviware.com/soapui/config"/>
	</con:parameters>
</con:request>
</con:method>
</con:resource>
</con:resource>
<con:method name="" method="POST" id="997f53d4-ce85-4a6f-baef-ef24a44d0033">
	<con:settings/>
	<con:parameters/>
</con:method>
</con:resource>
</con:interface>
<con:testSuite name="Usefull Methods - Antivirus" id="4a709bd8-bd87-403e-bec9-529925ce121a">
	<con:settings/>
	<con:runType>SEQUENTIAL</con:runType>


	<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CrÃ©er Contrat avfw.essentiel - 1mois - SEPA" searchProperties="true" id="cbe5ee85-876a-408f-aef7-a6c8d4207df7">
		<con:description>TestCase generated for REST Resource [Validation] located at
      [/contrat-core/contrat/{refContrat}/valider]</con:description>
		<con:settings/>
		<con:testStep type="groovy" name="SetRefCommande" id="c15ccfef-a244-44dc-b93f-8f794a5eca8f">
			<con:settings/>
			<con:config>
				<script>import static java.util.UUID.randomUUID 
def tc = context.testCase 
uuid = randomUUID().toString()
testRunner.testCase.setPropertyValue( "RefCommande", uuid ) 
log.info testRunner.testCase.getPropertyValue("RefCommande")</script>
			</con:config>
		</con:testStep>

		<con:testStep type="restrequest" name="PrÃ©parer Contrat" id="fef6824e-827b-4959-b0f7-f8b4606d98c8">
			<con:settings/>
			<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/preparer" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
				<con:restRequest name="PrÃ©parer Contrat" mediaType="application/json" postQueryString="false">
					<con:settings>
						<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
			</con:settings>
			<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
			<con:request>{
  "user": "SoapUITest",
  "produits": [
    {
      "numEC" : 1,
      "reference": "avfw.essentiel",
      "numeroCommande": "${#TestCase#RefCommande}",
      "label": "Antivirus Securitoo",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": 1,
        "typeTVA": "R",
        "montant": 4.17,
        "modePaiement": "SEPA",
        "modeFacturation": "DATE_ANNIVERSAIRE"
      }
    }
  ]
}</con:request>
			<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a1bd8aa6-4ccb-49f5-86e3-fb3dd7ee2415">
				<con:configuration>
					<codes>200</codes>
				</con:configuration>
			</con:assertion>
			<con:assertion type="XPath Match" name="XPath Match" id="94f7738c-fcc2-4ba1-85ad-01e978dfb6cd">
				<con:configuration/>
			</con:assertion>
			<con:credentials>
				<con:authType>Global HTTP Settings</con:authType>
			</con:credentials>
			<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
			<con:jmsPropertyConfig/>
			<con:parameters/>
		</con:restRequest>
	</con:config>
</con:testStep>
<con:testStep type="transfer" name="Move Infos Contrat" id="c6607288-5f9d-49e1-afcb-9ae7c1165015">
	<con:settings/>
	<con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
			<con:name>Ref Contrat Test Case</con:name>
			<con:sourceType>ResponseAsXml</con:sourceType>
			<con:sourceStep>PrÃ©parer Contrat</con:sourceStep>
			<con:sourcePath>declare namespace ns1='http://si2-srv.si-core.nordnet.fr/contrat-core/contrat/preparer';
//ns1:referenceContrat/text()</con:sourcePath>
			<con:targetType>RefContrat</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
	</con:config>
</con:testStep>
<con:testStep type="restrequest" name="Valider" id="27191ea6-7b16-465b-b652-7ed2a5431dda">
	<con:settings/>
	<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/valider" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:restRequest name="Valider" mediaType="application/json" postQueryString="false">
			<con:settings>
				<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
	</con:settings>
	<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
	<con:request>{
  "user": "SoapUITest",
  "idClient": "11351202",
  "idAdrFacturation": "009950162",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "numEC": 1,
      "referenceProduit": "avfw.essentiel",
      "idAdrLivraison": "009950162",
      "referenceModePaiement": "R0000012"
    }
  ],
  "politiqueValidation": {
    "fraisCreation": true,
    "checkIsPackagerCreationPossible": false
  }
}</con:request>
	<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="901d3564-ffe1-449b-9146-87f7d0ff7cb1">
		<con:configuration>
			<codes>200</codes>
		</con:configuration>
	</con:assertion>
	<con:assertion type="GroovyScriptAssertion" name="No Msg Return" id="023c80e3-2647-4712-afea-305feb8c6831">
		<con:configuration>
			<scriptText>assert messageExchange.hasResponse() == false</scriptText>
		</con:configuration>
	</con:assertion>
	<con:credentials>
		<con:authType>Global HTTP Settings</con:authType>
	</con:credentials>
	<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
	<con:jmsPropertyConfig/>
	<con:parameters>
		<entry key="refContrat" value="${#TestCase#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
	</con:parameters>
</con:restRequest>
</con:config>
</con:testStep>
<con:properties>
	<con:property>
		<con:name>RefCommande</con:name>
		<con:value>96dd86bb-0a73-42ec-8263-2604242310a0</con:value>
	</con:property>
	<con:property>
		<con:name>RefContrat</con:name>
		<con:value>00000097</con:value>
	</con:property>
</con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CrÃ©er Contrat avfw.essentiel - 1mois - CB" searchProperties="true" id="07a786f3-2d35-42fa-b2c5-46d0cff4d1fe">
	<con:description>TestCase generated for REST Resource [Validation] located at
      [/contrat-core/contrat/{refContrat}/valider]</con:description>
	<con:settings/>
	<con:testStep type="groovy" name="SetRefCommande" id="43c13150-e549-42c9-8a3d-aac4bb6868ce">
		<con:settings/>
		<con:config>
			<script>import static java.util.UUID.randomUUID 
def tc = context.testCase 
uuid = randomUUID().toString()
testRunner.testCase.setPropertyValue( "RefCommande", uuid ) 
log.info testRunner.testCase.getPropertyValue("RefCommande")</script>
		</con:config>
	</con:testStep>

	<con:testStep type="restrequest" name="PrÃ©parer Contrat" id="61aabbc2-bf8f-418a-b005-3bedfb1deab7">
		<con:settings/>
		<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/preparer" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:restRequest name="PrÃ©parer Contrat" mediaType="application/json" postQueryString="false">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "user": "SoapUITest",
  "produits": [
    {
      "numEC" : 1,
      "reference": "avfw.essentiel",
      "numeroCommande": "${#TestCase#RefCommande}",
      "label": "Antivirus Securitoo",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": 1,
        "duree" : 1,
        "typeTVA": "R",
        "montant": 4.17,
        "modePaiement": "CB",
        "modeFacturation": "DATE_ANNIVERSAIRE"
      }
    }
  ]
}</con:request>
		<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a1bd8aa6-4ccb-49f5-86e3-fb3dd7ee2415">
			<con:configuration>
				<codes>200</codes>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="XPath Match" id="94f7738c-fcc2-4ba1-85ad-01e978dfb6cd">
			<con:configuration/>
		</con:assertion>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters/>
	</con:restRequest>
</con:config>
</con:testStep>
<con:testStep type="transfer" name="Move Infos Contrat" id="dbab2ee5-b34e-49ce-8ad2-7c83ce669d6c">
	<con:settings/>
	<con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
			<con:name>Ref Contrat Test Case</con:name>
			<con:sourceType>ResponseAsXml</con:sourceType>
			<con:sourceStep>PrÃ©parer Contrat</con:sourceStep>
			<con:sourcePath>declare namespace ns1='http://si2-srv.si-core.nordnet.fr/contrat-core/contrat/preparer';
//ns1:referenceContrat/text()</con:sourcePath>
			<con:targetType>RefContrat</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
	</con:config>
</con:testStep>
<con:testStep type="restrequest" name="Valider" id="03e5100e-747f-4846-a8fc-f156ab3ffe0e">
	<con:settings/>
	<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/valider" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:restRequest name="Valider" mediaType="application/json" postQueryString="false">
			<con:settings>
				<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
	</con:settings>
	<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
	<con:request>{
  "user": "SoapUITest",
  "idClient": "11351202",
  "idAdrFacturation": "009950162",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "numEC": 1,
      "referenceProduit": "avfw.essentiel",
      "idAdrLivraison": "009950162",
      "referenceModePaiement": "id-transaction-CB"
    }
  ],
  "politiqueValidation": {
    "fraisCreation": true,
    "checkIsPackagerCreationPossible": false
  }
}</con:request>
	<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="901d3564-ffe1-449b-9146-87f7d0ff7cb1">
		<con:configuration>
			<codes>200</codes>
		</con:configuration>
	</con:assertion>
	<con:assertion type="GroovyScriptAssertion" name="No Msg Return" id="023c80e3-2647-4712-afea-305feb8c6831">
		<con:configuration>
			<scriptText>assert messageExchange.hasResponse() == false</scriptText>
		</con:configuration>
	</con:assertion>
	<con:credentials>
		<con:authType>Global HTTP Settings</con:authType>
	</con:credentials>
	<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
	<con:jmsPropertyConfig/>
	<con:parameters>
		<entry key="refContrat" value="${#TestCase#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
	</con:parameters>
</con:restRequest>
</con:config>
</con:testStep>
<con:properties>
	<con:property>
		<con:name>RefCommande</con:name>
		<con:value>f8e450bf-208e-4b32-ae33-34625d9726c9</con:value>
	</con:property>
	<con:property>
		<con:name>RefContrat</con:name>
		<con:value>00000041</con:value>
	</con:property>
</con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CrÃ©er Contrat avfw.essentiel - 1mois - CHEQUE" searchProperties="true" id="d8fc1c3e-0912-4376-b2c5-583f1d0a20b3">
	<con:description>TestCase generated for REST Resource [Validation] located at
      [/contrat-core/contrat/{refContrat}/valider]</con:description>
	<con:settings/>
	<con:testStep type="groovy" name="SetRefCommande" id="f774821c-7eb5-4295-85e4-67c2383080cb">
		<con:settings/>
		<con:config>
			<script>import static java.util.UUID.randomUUID 
def tc = context.testCase 
uuid = randomUUID().toString()
testRunner.testCase.setPropertyValue( "RefCommande", uuid ) 
log.info testRunner.testCase.getPropertyValue("RefCommande")</script>
		</con:config>
	</con:testStep>

	<con:testStep type="restrequest" name="PrÃ©parer Contrat" id="42638a89-f0dd-47d6-b695-9b712f00b309">
		<con:settings/>
		<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/preparer" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:restRequest name="PrÃ©parer Contrat" mediaType="application/json" postQueryString="false">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "user": "SoapUITest",
  "produits": [
    {
      "numEC" : 1,
      "reference": "avfw.essentiel",
      "numeroCommande": "${#TestCase#RefCommande}",
      "label": "Antivirus Securitoo",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": 1,
        "duree" : 1,
        "typeTVA": "R",
        "montant": 4.17,
        "modePaiement": "CHEQUE",
        "modeFacturation": "DATE_ANNIVERSAIRE"
      }
    }
  ]
}</con:request>
		<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a1bd8aa6-4ccb-49f5-86e3-fb3dd7ee2415">
			<con:configuration>
				<codes>200</codes>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="XPath Match" id="94f7738c-fcc2-4ba1-85ad-01e978dfb6cd">
			<con:configuration/>
		</con:assertion>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters/>
	</con:restRequest>
</con:config>
</con:testStep>
<con:testStep type="transfer" name="Move Infos Contrat" id="413b4e35-bdb1-48bb-bee4-e2c227892e2c">
	<con:settings/>
	<con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
			<con:name>Ref Contrat Test Case</con:name>
			<con:sourceType>ResponseAsXml</con:sourceType>
			<con:sourceStep>PrÃ©parer Contrat</con:sourceStep>
			<con:sourcePath>declare namespace ns1='http://si2-srv.si-core.nordnet.fr/contrat-core/contrat/preparer';
//ns1:referenceContrat/text()</con:sourcePath>
			<con:targetType>RefContrat</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
	</con:config>
</con:testStep>
<con:testStep type="restrequest" name="Valider" id="3b2a5184-eacb-40f4-9744-05ee88cf3d4b">
	<con:settings/>
	<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/valider" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:restRequest name="Valider" mediaType="application/json" postQueryString="false">
			<con:settings>
				<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
	</con:settings>
	<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
	<con:request>{
  "user": "SoapUITest",
  "idClient": "11351202",
  "idAdrFacturation": "009950162",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "numEC": 1,
      "referenceProduit": "avfw.essentiel",
      "idAdrLivraison": "009950162",
      "referenceModePaiement": "id-Cheque"
    }
  ],
  "politiqueValidation": {
    "fraisCreation": true,
    "checkIsPackagerCreationPossible": false
  }
}</con:request>
	<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="901d3564-ffe1-449b-9146-87f7d0ff7cb1">
		<con:configuration>
			<codes>200</codes>
		</con:configuration>
	</con:assertion>
	<con:assertion type="GroovyScriptAssertion" name="No Msg Return" id="023c80e3-2647-4712-afea-305feb8c6831">
		<con:configuration>
			<scriptText>assert messageExchange.hasResponse() == false</scriptText>
		</con:configuration>
	</con:assertion>
	<con:credentials>
		<con:authType>Global HTTP Settings</con:authType>
	</con:credentials>
	<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
	<con:jmsPropertyConfig/>
	<con:parameters>
		<entry key="refContrat" value="${#TestCase#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
	</con:parameters>
</con:restRequest>
</con:config>
</con:testStep>
<con:properties>
	<con:property>
		<con:name>RefCommande</con:name>
		<con:value>f8e450bf-208e-4b32-ae33-34625d9726c9</con:value>
	</con:property>
	<con:property>
		<con:name>RefContrat</con:name>
		<con:value>00000041</con:value>
	</con:property>
</con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CrÃ©er Contrat avfw.essentiel - 1 mois - Facture" searchProperties="true" id="4670f3f4-0592-43c3-9305-51fcc2ebad73" disabled="true">
	<con:description>TestCase generated for REST Resource [Validation] located at
      [/contrat-core/contrat/{refContrat}/valider]</con:description>
	<con:settings/>
	<con:testStep type="groovy" name="SetRefCommande" id="9e015809-ee49-47eb-9bb8-53da78a4ae4b">
		<con:settings/>
		<con:config>
			<script>import static java.util.UUID.randomUUID 
def tc = context.testCase 
uuid = randomUUID().toString()
testRunner.testCase.setPropertyValue( "RefCommande", uuid ) 
log.info testRunner.testCase.getPropertyValue("RefCommande")</script>
		</con:config>
	</con:testStep>

	<con:testStep type="restrequest" name="PrÃ©parer Contrat" id="ef87f78f-3060-44cf-a0c3-879670c1238c">
		<con:settings/>
		<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/preparer" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:restRequest name="PrÃ©parer Contrat" mediaType="application/json" postQueryString="false">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "user": "SoapUITest",
  "produits": [
    {
      "numEC" : 1,
      "reference": "avfw.essentiel",
      "numeroCommande": "${#TestCase#RefCommande}",
      "label": "Antivirus Securitoo",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": 1,
        "typeTVA": "R",
        "montant": 4.17,
        "modePaiement": "FACTURE",
        "modeFacturation": "DATE_ANNIVERSAIRE"
      }
    }
  ]
}</con:request>
		<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a1bd8aa6-4ccb-49f5-86e3-fb3dd7ee2415">
			<con:configuration>
				<codes>200</codes>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="XPath Match" id="94f7738c-fcc2-4ba1-85ad-01e978dfb6cd">
			<con:configuration/>
		</con:assertion>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters/>
	</con:restRequest>
</con:config>
</con:testStep>
<con:testStep type="transfer" name="Move Infos Contrat" id="33ba9eda-102f-4f3c-85a3-b0efc6b8a1a5">
	<con:settings/>
	<con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
			<con:name>Ref Contrat Test Case</con:name>
			<con:sourceType>ResponseAsXml</con:sourceType>
			<con:sourceStep>PrÃ©parer Contrat</con:sourceStep>
			<con:sourcePath>declare namespace ns1='http://si2-srv.si-core.nordnet.fr/contrat-core/contrat/preparer';
//ns1:referenceContrat/text()</con:sourcePath>
			<con:targetType>RefContrat</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
	</con:config>
</con:testStep>
<con:testStep type="restrequest" name="Valider" id="51e269f2-5866-44a8-8d81-65892cc5e962">
	<con:settings/>
	<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/valider" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:restRequest name="Valider" mediaType="application/json" postQueryString="false">
			<con:settings>
				<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
	</con:settings>
	<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
	<con:request>{
  "user": "SoapUITest",
  "idClient": "00003870",
  "idAdrFacturation": "200333",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "numEC": 1,
      "referenceProduit": "avfw.essentiel",
      "idAdrLivraison": "200333",
      "referenceModePaiement": "id-mandat-facture"
    }
  ],
  "politiqueValidation": {
    "fraisCreation": true,
    "checkIsPackagerCreationPossible": false
  }
}</con:request>
	<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="901d3564-ffe1-449b-9146-87f7d0ff7cb1">
		<con:configuration>
			<codes>200</codes>
		</con:configuration>
	</con:assertion>
	<con:assertion type="GroovyScriptAssertion" name="No Msg Return" id="023c80e3-2647-4712-afea-305feb8c6831">
		<con:configuration>
			<scriptText>assert messageExchange.hasResponse() == false</scriptText>
		</con:configuration>
	</con:assertion>
	<con:credentials>
		<con:authType>Global HTTP Settings</con:authType>
	</con:credentials>
	<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
	<con:jmsPropertyConfig/>
	<con:parameters>
		<entry key="refContrat" value="${#TestCase#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
	</con:parameters>
</con:restRequest>
</con:config>
</con:testStep>
<con:properties>
	<con:property>
		<con:name>RefCommande</con:name>
		<con:value>f8e450bf-208e-4b32-ae33-34625d9726c9</con:value>
	</con:property>
	<con:property>
		<con:name>RefContrat</con:name>
		<con:value>00000041</con:value>
	</con:property>
</con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CrÃ©er Contrat avfw.essentiel - 1 mois - Facture Fin de Mois" searchProperties="true" disabled="true" id="92d52031-e747-4b2b-b9f6-8ca0a3ef3e9d">
	<con:description>TestCase generated for REST Resource [Validation] located at
      [/contrat-core/contrat/{refContrat}/valider]</con:description>
	<con:settings/>
	<con:testStep type="groovy" name="SetRefCommande" id="894b4df8-1d26-42de-8338-f94c3a26ef79">
		<con:settings/>
		<con:config>
			<script>import static java.util.UUID.randomUUID 
def tc = context.testCase 
uuid = randomUUID().toString()
testRunner.testCase.setPropertyValue( "RefCommande", uuid ) 
log.info testRunner.testCase.getPropertyValue("RefCommande")</script>
		</con:config>
	</con:testStep>

	<con:testStep type="restrequest" name="PrÃ©parer Contrat" id="05eb3a6c-4921-4daa-ab12-be3a95dbdc2b">
		<con:settings/>
		<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/preparer" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:restRequest name="PrÃ©parer Contrat" mediaType="application/json" postQueryString="false">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "user": "SoapUITest",
  "produits": [
    {
      "numEC" : 1,
      "reference": "avfw.essentiel",
      "numeroCommande": "${#TestCase#RefCommande}",
      "label": "Antivirus Securitoo",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": 1,
        "typeTVA": "R",
        "montant": 4.17,
        "modePaiement": "FACTURE_FIN_DE_MOIS",
        "modeFacturation": "DATE_ANNIVERSAIRE"
      }
    }
  ]
}</con:request>
		<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a1bd8aa6-4ccb-49f5-86e3-fb3dd7ee2415">
			<con:configuration>
				<codes>200</codes>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="XPath Match" id="94f7738c-fcc2-4ba1-85ad-01e978dfb6cd">
			<con:configuration/>
		</con:assertion>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters/>
	</con:restRequest>
</con:config>
</con:testStep>
<con:testStep type="transfer" name="Move Infos Contrat" id="1ed782fa-92a1-4b2f-9453-1a16226861c2">
	<con:settings/>
	<con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
			<con:name>Ref Contrat Test Case</con:name>
			<con:sourceType>ResponseAsXml</con:sourceType>
			<con:sourceStep>PrÃ©parer Contrat</con:sourceStep>
			<con:sourcePath>declare namespace ns1='http://si2-srv.si-core.nordnet.fr/contrat-core/contrat/preparer';
//ns1:referenceContrat/text()</con:sourcePath>
			<con:targetType>RefContrat</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
	</con:config>
</con:testStep>
<con:testStep type="restrequest" name="Valider" id="130f3c82-2575-4895-a75c-fb58166cb17e">
	<con:settings/>
	<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/valider" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:restRequest name="Valider" mediaType="application/json" postQueryString="false">
			<con:settings>
				<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
	</con:settings>
	<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
	<con:request>{
  "user": "SoapUITest",
  "idClient": "00003870",
  "idAdrFacturation": "200333",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "numEC": 1,
      "referenceProduit": "avfw.essentiel",
      "idAdrLivraison": "200333",
      "referenceModePaiement": "id-mandat-facture"
    }
  ],
  "politiqueValidation": {
    "fraisCreation": true,
    "checkIsPackagerCreationPossible": false
  }
}</con:request>
	<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="901d3564-ffe1-449b-9146-87f7d0ff7cb1">
		<con:configuration>
			<codes>200</codes>
		</con:configuration>
	</con:assertion>
	<con:assertion type="GroovyScriptAssertion" name="No Msg Return" id="023c80e3-2647-4712-afea-305feb8c6831">
		<con:configuration>
			<scriptText>assert messageExchange.hasResponse() == false</scriptText>
		</con:configuration>
	</con:assertion>
	<con:credentials>
		<con:authType>Global HTTP Settings</con:authType>
	</con:credentials>
	<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
	<con:jmsPropertyConfig/>
	<con:parameters>
		<entry key="refContrat" value="${#TestCase#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
	</con:parameters>
</con:restRequest>
</con:config>
</con:testStep>
<con:properties>
	<con:property>
		<con:name>RefCommande</con:name>
		<con:value>f8e450bf-208e-4b32-ae33-34625d9726c9</con:value>
	</con:property>
	<con:property>
		<con:name>RefContrat</con:name>
		<con:value>00000041</con:value>
	</con:property>
</con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CrÃ©er Contrat mobileprotection.essentiel.s - 1 mois - SEPA" searchProperties="true" id="5d1b55f5-cfd0-4a19-9298-093a914d899c">
	<con:description>TestCase generated for REST Resource [Validation] located at
      [/contrat-core/contrat/{refContrat}/valider]</con:description>
	<con:settings/>
	<con:testStep type="groovy" name="SetRefCommande">
		<con:settings/>
		<con:config>
			<script>import static java.util.UUID.randomUUID 
def tc = context.testCase 
uuid = randomUUID().toString()
testRunner.testCase.setPropertyValue( "RefCommande", uuid ) 
log.info testRunner.testCase.getPropertyValue("RefCommande")</script>
		</con:config>
	</con:testStep>

	<con:testStep type="restrequest" name="PrÃ©parer Contrat">
		<con:settings/>
		<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/preparer" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:restRequest name="PrÃ©parer Contrat" mediaType="application/json" postQueryString="false">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "user": "SoapUITest",
  "produits": [
    {
      "numEC" : 1,
      "reference": "mobileprotection.essentiel.s",
      "numeroCommande": "${#TestCase#RefCommande}",
      "label": "Antivirus Securitoo",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": 1,
        "duree" : 1,
        "typeTVA": "R",
        "montant": 2.5,
        "modePaiement": "SEPA",
        "modeFacturation": "DATE_ANNIVERSAIRE"
      }
    }
  ]
}</con:request>
		<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
			<con:configuration>
				<codes>200</codes>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="XPath Match">
			<con:configuration/>
		</con:assertion>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters/>
	</con:restRequest>
</con:config>
</con:testStep>
<con:testStep type="transfer" name="Move Infos Contrat">
	<con:settings/>
	<con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
			<con:name>Ref Contrat Test Case</con:name>
			<con:sourceType>ResponseAsXml</con:sourceType>
			<con:sourceStep>PrÃ©parer Contrat</con:sourceStep>
			<con:sourcePath>declare namespace ns1='http://si2-srv.si-core.nordnet.fr/contrat-core/contrat/preparer';
//ns1:referenceContrat/text()</con:sourcePath>
			<con:targetType>RefContrat</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
	</con:config>
</con:testStep>
<con:testStep type="restrequest" name="Valider">
	<con:settings/>
	<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/valider" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:restRequest name="Valider" mediaType="application/json" postQueryString="false">
			<con:settings>
				<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
	</con:settings>
	<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
	<con:request>{
  "user": "SoapUITest",
  "idClient": "11351202",
  "idAdrFacturation": "009950162",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "numEC": 1,
      "referenceProduit": "mobileprotection.essentiel.s",
      "idAdrLivraison": "009950162",
      "referenceModePaiement": "R0000012"
    }
  ],
  "politiqueValidation": {
    "fraisCreation": true,
    "checkIsPackagerCreationPossible": false
  }
}</con:request>
	<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
		<con:configuration>
			<codes>200</codes>
		</con:configuration>
	</con:assertion>
	<con:assertion type="GroovyScriptAssertion" name="No Msg Return">
		<con:configuration>
			<scriptText>assert messageExchange.hasResponse() == false</scriptText>
		</con:configuration>
	</con:assertion>
	<con:credentials>
		<con:authType>Global HTTP Settings</con:authType>
	</con:credentials>
	<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
	<con:jmsPropertyConfig/>
	<con:parameters>
		<entry key="refContrat" value="${#TestCase#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
	</con:parameters>
</con:restRequest>
</con:config>
</con:testStep>
<con:properties>
	<con:property>
		<con:name>RefCommande</con:name>
		<con:value>8fb04118-fdc2-4b77-8014-5a98686426c6</con:value>
	</con:property>
	<con:property>
		<con:name>RefContrat</con:name>
		<con:value>00000042</con:value>
	</con:property>
</con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CrÃ©er Contrat mobileprotection.essentiel.s - 1 mois - CB" searchProperties="true">
	<con:description>TestCase generated for REST Resource [Validation] located at
      [/contrat-core/contrat/{refContrat}/valider]</con:description>
	<con:settings/>
	<con:testStep type="groovy" name="SetRefCommande">
		<con:settings/>
		<con:config>
			<script>import static java.util.UUID.randomUUID 
def tc = context.testCase 
uuid = randomUUID().toString()
testRunner.testCase.setPropertyValue( "RefCommande", uuid ) 
log.info testRunner.testCase.getPropertyValue("RefCommande")</script>
		</con:config>
	</con:testStep>

	<con:testStep type="restrequest" name="PrÃ©parer Contrat">
		<con:settings/>
		<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/preparer" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:restRequest name="PrÃ©parer Contrat" mediaType="application/json" postQueryString="false">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "user": "SoapUITest",
  "produits": [
    {
      "numEC" : 1,
      "reference": "mobileprotection.essentiel.s",
      "numeroCommande": "${#TestCase#RefCommande}",
      "label": "Antivirus Securitoo",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": 1,
        "duree" : 1,
        "typeTVA": "R",
        "montant": 2.5,
        "modePaiement": "CB",
        "modeFacturation": "DATE_ANNIVERSAIRE"
      }
    }
  ]
}</con:request>
		<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
			<con:configuration>
				<codes>200</codes>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="XPath Match">
			<con:configuration/>
		</con:assertion>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters/>
	</con:restRequest>
</con:config>
</con:testStep>
<con:testStep type="transfer" name="Move Infos Contrat">
	<con:settings/>
	<con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
			<con:name>Ref Contrat Test Case</con:name>
			<con:sourceType>ResponseAsXml</con:sourceType>
			<con:sourceStep>PrÃ©parer Contrat</con:sourceStep>
			<con:sourcePath>declare namespace ns1='http://si2-srv.si-core.nordnet.fr/contrat-core/contrat/preparer';
//ns1:referenceContrat/text()</con:sourcePath>
			<con:targetType>RefContrat</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
	</con:config>
</con:testStep>
<con:testStep type="restrequest" name="Valider">
	<con:settings/>
	<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/valider" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:restRequest name="Valider" mediaType="application/json" postQueryString="false">
			<con:settings>
				<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
	</con:settings>
	<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
	<con:request>{
  "user": "SoapUITest",
  "idClient": "11351202",
  "idAdrFacturation": "009950162",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "numEC": 1,
      "referenceProduit": "mobileprotection.essentiel.s",
      "idAdrLivraison": "009950162",
      "referenceModePaiement": "id-transaction-CB"
    }
  ],
  "politiqueValidation": {
    "fraisCreation": true,
    "checkIsPackagerCreationPossible": false
  }
}</con:request>
	<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
		<con:configuration>
			<codes>200</codes>
		</con:configuration>
	</con:assertion>
	<con:assertion type="GroovyScriptAssertion" name="No Msg Return">
		<con:configuration>
			<scriptText>assert messageExchange.hasResponse() == false</scriptText>
		</con:configuration>
	</con:assertion>
	<con:credentials>
		<con:authType>Global HTTP Settings</con:authType>
	</con:credentials>
	<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
	<con:jmsPropertyConfig/>
	<con:parameters>
		<entry key="refContrat" value="${#TestCase#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
	</con:parameters>
</con:restRequest>
</con:config>
</con:testStep>
<con:properties>
	<con:property>
		<con:name>RefCommande</con:name>
		<con:value>8fb04118-fdc2-4b77-8014-5a98686426c6</con:value>
	</con:property>
	<con:property>
		<con:name>RefContrat</con:name>
		<con:value>00000042</con:value>
	</con:property>
</con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CrÃ©er Contrat mobileprotection.essentiel.s - 1 mois - CHEQUE" searchProperties="true">
	<con:description>TestCase generated for REST Resource [Validation] located at
      [/contrat-core/contrat/{refContrat}/valider]</con:description>
	<con:settings/>
	<con:testStep type="groovy" name="SetRefCommande">
		<con:settings/>
		<con:config>
			<script>import static java.util.UUID.randomUUID 
def tc = context.testCase 
uuid = randomUUID().toString()
testRunner.testCase.setPropertyValue( "RefCommande", uuid ) 
log.info testRunner.testCase.getPropertyValue("RefCommande")</script>
		</con:config>
	</con:testStep>

	<con:testStep type="restrequest" name="PrÃ©parer Contrat">
		<con:settings/>
		<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/preparer" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:restRequest name="PrÃ©parer Contrat" mediaType="application/json" postQueryString="false">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "user": "SoapUITest",
  "produits": [
    {
      "numEC" : 1,
      "reference": "mobileprotection.essentiel.s",
      "numeroCommande": "${#TestCase#RefCommande}",
      "label": "Antivirus Securitoo",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": 1,
        "duree" : 1,
        "typeTVA": "R",
        "montant": 2.5,
        "modePaiement": "CHEQUE",
        "modeFacturation": "DATE_ANNIVERSAIRE"
      }
    }
  ]
}</con:request>
		<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
			<con:configuration>
				<codes>200</codes>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="XPath Match">
			<con:configuration/>
		</con:assertion>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters/>
	</con:restRequest>
</con:config>
</con:testStep>
<con:testStep type="transfer" name="Move Infos Contrat">
	<con:settings/>
	<con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
			<con:name>Ref Contrat Test Case</con:name>
			<con:sourceType>ResponseAsXml</con:sourceType>
			<con:sourceStep>PrÃ©parer Contrat</con:sourceStep>
			<con:sourcePath>declare namespace ns1='http://si2-srv.si-core.nordnet.fr/contrat-core/contrat/preparer';
//ns1:referenceContrat/text()</con:sourcePath>
			<con:targetType>RefContrat</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
	</con:config>
</con:testStep>
<con:testStep type="restrequest" name="Valider">
	<con:settings/>
	<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/valider" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:restRequest name="Valider" mediaType="application/json" postQueryString="false">
			<con:settings>
				<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
	</con:settings>
	<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
	<con:request>{
  "user": "SoapUITest",
  "idClient": "11351202",
  "idAdrFacturation": "009950162",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "numEC": 1,
      "referenceProduit": "mobileprotection.essentiel.s",
      "idAdrLivraison": "009950162",
      "referenceModePaiement": "id-cheque"
    }
  ],
  "politiqueValidation": {
    "fraisCreation": true,
    "checkIsPackagerCreationPossible": false
  }
}</con:request>
	<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
		<con:configuration>
			<codes>200</codes>
		</con:configuration>
	</con:assertion>
	<con:assertion type="GroovyScriptAssertion" name="No Msg Return">
		<con:configuration>
			<scriptText>assert messageExchange.hasResponse() == false</scriptText>
		</con:configuration>
	</con:assertion>
	<con:credentials>
		<con:authType>Global HTTP Settings</con:authType>
	</con:credentials>
	<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
	<con:jmsPropertyConfig/>
	<con:parameters>
		<entry key="refContrat" value="${#TestCase#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
	</con:parameters>
</con:restRequest>
</con:config>
</con:testStep>
<con:properties>
	<con:property>
		<con:name>RefCommande</con:name>
		<con:value>8fb04118-fdc2-4b77-8014-5a98686426c6</con:value>
	</con:property>
	<con:property>
		<con:name>RefContrat</con:name>
		<con:value>00000042</con:value>
	</con:property>
</con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CrÃ©er Contrat mobileprotection.essentiel.s - 1 mois - Facture Fin de Mois" searchProperties="true" disabled="true">
	<con:description>TestCase generated for REST Resource [Validation] located at
      [/contrat-core/contrat/{refContrat}/valider]</con:description>
	<con:settings/>
	<con:testStep type="groovy" name="SetRefCommande">
		<con:settings/>
		<con:config>
			<script>import static java.util.UUID.randomUUID 
def tc = context.testCase 
uuid = randomUUID().toString()
testRunner.testCase.setPropertyValue( "RefCommande", uuid ) 
log.info testRunner.testCase.getPropertyValue("RefCommande")</script>
		</con:config>
	</con:testStep>

	<con:testStep type="restrequest" name="PrÃ©parer Contrat">
		<con:settings/>
		<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/preparer" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:restRequest name="PrÃ©parer Contrat" mediaType="application/json" postQueryString="false">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "user": "SoapUITest",
  "produits": [
    {
      "numEC" : 1,
      "reference": "mobileprotection.essentiel.s",
      "numeroCommande": "${#TestCase#RefCommande}",
      "label": "Antivirus Securitoo",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": 1,
        "typeTVA": "R",
        "montant": 2.5,
        "modePaiement": "FACTURE_FIN_DE_MOIS",
        "modeFacturation": "DATE_ANNIVERSAIRE"
      }
    }
  ]
}</con:request>
		<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
			<con:configuration>
				<codes>200</codes>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="XPath Match">
			<con:configuration/>
		</con:assertion>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters/>
	</con:restRequest>
</con:config>
</con:testStep>
<con:testStep type="transfer" name="Move Infos Contrat">
	<con:settings/>
	<con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
			<con:name>Ref Contrat Test Case</con:name>
			<con:sourceType>ResponseAsXml</con:sourceType>
			<con:sourceStep>PrÃ©parer Contrat</con:sourceStep>
			<con:sourcePath>declare namespace ns1='http://si2-srv.si-core.nordnet.fr/contrat-core/contrat/preparer';
//ns1:referenceContrat/text()</con:sourcePath>
			<con:targetType>RefContrat</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
	</con:config>
</con:testStep>
<con:testStep type="restrequest" name="Valider">
	<con:settings/>
	<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/valider" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:restRequest name="Valider" mediaType="application/json" postQueryString="false">
			<con:settings>
				<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
	</con:settings>
	<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
	<con:request>{
  "user": "SoapUITest",
  "idClient": "00003870",
  "idAdrFacturation": "200333",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "numEC": 1,
      "referenceProduit": "mobileprotection.essentiel.s",
      "idAdrLivraison": "200333",
      "referenceModePaiement": "id-mandat-facture"
    }
  ],
  "politiqueValidation": {
    "fraisCreation": true,
    "checkIsPackagerCreationPossible": false
  }
}</con:request>
	<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
		<con:configuration>
			<codes>200</codes>
		</con:configuration>
	</con:assertion>
	<con:assertion type="GroovyScriptAssertion" name="No Msg Return">
		<con:configuration>
			<scriptText>assert messageExchange.hasResponse() == false</scriptText>
		</con:configuration>
	</con:assertion>
	<con:credentials>
		<con:authType>Global HTTP Settings</con:authType>
	</con:credentials>
	<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
	<con:jmsPropertyConfig/>
	<con:parameters>
		<entry key="refContrat" value="${#TestCase#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
	</con:parameters>
</con:restRequest>
</con:config>
</con:testStep>
<con:properties>
	<con:property>
		<con:name>RefCommande</con:name>
		<con:value>8fb04118-fdc2-4b77-8014-5a98686426c6</con:value>
	</con:property>
	<con:property>
		<con:name>RefContrat</con:name>
		<con:value>00000042</con:value>
	</con:property>
</con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CrÃ©er Contrat mobileprotection.essentiel.s - 1 mois - Facture" searchProperties="true" disabled="true">
	<con:description>TestCase generated for REST Resource [Validation] located at
      [/contrat-core/contrat/{refContrat}/valider]</con:description>
	<con:settings/>
	<con:testStep type="groovy" name="SetRefCommande">
		<con:settings/>
		<con:config>
			<script>import static java.util.UUID.randomUUID 
def tc = context.testCase 
uuid = randomUUID().toString()
testRunner.testCase.setPropertyValue( "RefCommande", uuid ) 
log.info testRunner.testCase.getPropertyValue("RefCommande")</script>
		</con:config>
	</con:testStep>

	<con:testStep type="restrequest" name="PrÃ©parer Contrat">
		<con:settings/>
		<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/preparer" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:restRequest name="PrÃ©parer Contrat" mediaType="application/json" postQueryString="false">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "user": "SoapUITest",
  "produits": [
    {
      "numEC" : 1,
      "reference": "mobileprotection.essentiel.s",
      "numeroCommande": "${#TestCase#RefCommande}",
      "label": "Antivirus Securitoo",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": 1,
        "typeTVA": "R",
        "montant": 2.5,
        "modePaiement": "FACTURE",
        "modeFacturation": "DATE_ANNIVERSAIRE"
      }
    }
  ]
}</con:request>
		<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
			<con:configuration>
				<codes>200</codes>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="XPath Match">
			<con:configuration/>
		</con:assertion>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters/>
	</con:restRequest>
</con:config>
</con:testStep>
<con:testStep type="transfer" name="Move Infos Contrat">
	<con:settings/>
	<con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
			<con:name>Ref Contrat Test Case</con:name>
			<con:sourceType>ResponseAsXml</con:sourceType>
			<con:sourceStep>PrÃ©parer Contrat</con:sourceStep>
			<con:sourcePath>declare namespace ns1='http://si2-srv.si-core.nordnet.fr/contrat-core/contrat/preparer';
//ns1:referenceContrat/text()</con:sourcePath>
			<con:targetType>RefContrat</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
	</con:config>
</con:testStep>
<con:testStep type="restrequest" name="Valider">
	<con:settings/>
	<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/valider" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:restRequest name="Valider" mediaType="application/json" postQueryString="false">
			<con:settings>
				<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
	</con:settings>
	<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
	<con:request>{
  "user": "SoapUITest",
  "idClient": "00003870",
  "idAdrFacturation": "200333",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "numEC": 1,
      "referenceProduit": "mobileprotection.essentiel.s",
      "idAdrLivraison": "200333",
      "referenceModePaiement": "id-mandat-facture"
    }
  ],
  "politiqueValidation": {
    "fraisCreation": true,
    "checkIsPackagerCreationPossible": false
  }
}</con:request>
	<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
		<con:configuration>
			<codes>200</codes>
		</con:configuration>
	</con:assertion>
	<con:assertion type="GroovyScriptAssertion" name="No Msg Return">
		<con:configuration>
			<scriptText>assert messageExchange.hasResponse() == false</scriptText>
		</con:configuration>
	</con:assertion>
	<con:credentials>
		<con:authType>Global HTTP Settings</con:authType>
	</con:credentials>
	<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
	<con:jmsPropertyConfig/>
	<con:parameters>
		<entry key="refContrat" value="${#TestCase#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
	</con:parameters>
</con:restRequest>
</con:config>
</con:testStep>
<con:properties>
	<con:property>
		<con:name>RefCommande</con:name>
		<con:value>8fb04118-fdc2-4b77-8014-5a98686426c6</con:value>
	</con:property>
	<con:property>
		<con:name>RefContrat</con:name>
		<con:value>00000042</con:value>
	</con:property>
</con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CrÃ©er Contrat avfw.prestige" searchProperties="true" id="8c5a4d76-7c52-45f6-8c74-b91ca42a8c2e" disabled="true">
	<con:description>TestCase generated for REST Resource [Validation] located at
      [/contrat-core/contrat/{refContrat}/valider]</con:description>
	<con:settings/>
	<con:testStep type="groovy" name="SetRefCommande" id="68671d9e-e609-4e7a-9ca1-f4e00d8c78c8">
		<con:settings/>
		<con:config>
			<script>import static java.util.UUID.randomUUID 
def tc = context.testCase 
uuid = randomUUID().toString()
testRunner.testCase.setPropertyValue( "RefCommande", uuid ) 
log.info testRunner.testCase.getPropertyValue("RefCommande")</script>
		</con:config>
	</con:testStep>

	<con:testStep type="restrequest" name="PrÃ©parer Contrat" id="941a2781-c6e5-4755-a28e-e1e6ddebee7a">
		<con:settings/>
		<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/preparer" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:restRequest name="PrÃ©parer Contrat" mediaType="application/json" postQueryString="false">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "user": "SoapUITest",
  "produits": [
    {
      "numEC" : 1,
      "reference": "avfw.prestige",
      "numeroCommande": "${#TestCase#RefCommande}",
      "label": "Antivirus Securitoo",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": 1,
        "typeTVA": "R",
        "montant": 4.17,
        "modePaiement": "SEPA",
        "modeFacturation": "DATE_ANNIVERSAIRE"
      }
    }
  ]
}</con:request>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters/>
	</con:restRequest>
</con:config>
</con:testStep>
<con:testStep type="transfer" name="Move Infos Contrat" id="ccf8f1bc-4f78-4c77-a4c9-3874d8a9fb01">
	<con:settings/>
	<con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
			<con:name>Ref Contrat Test Case</con:name>
			<con:sourceType>ResponseAsXml</con:sourceType>
			<con:sourceStep>PrÃ©parer Contrat</con:sourceStep>
			<con:sourcePath>declare namespace ns1='http://si2-srv.si-core.nordnet.fr/contrat-core/contrat/preparer';
//ns1:referenceContrat/text()</con:sourcePath>
			<con:targetType>RefContrat</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
	</con:config>
</con:testStep>
<con:testStep type="restrequest" name="Valider" id="263bd3eb-97fc-45bb-bb8b-9ba43a49f56e">
	<con:settings/>
	<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/valider" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:restRequest name="Valider" mediaType="application/json" postQueryString="false">
			<con:settings>
				<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
	</con:settings>
	<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
	<con:request>{
  "user": "SoapUITest",
  "idClient": "00003870",
  "idAdrFacturation": "00062264",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "numEC": 1,
      "referenceProduit": "avfw.prestige",
      "idAdrLivraison": "00062264",
      "referenceModePaiement": "SEPA"
    }
  ],
  "politiqueValidation": {
    "fraisCreation": true,
    "checkIsPackagerCreationPossible": true
  }
}</con:request>
	<con:credentials>
		<con:authType>Global HTTP Settings</con:authType>
	</con:credentials>
	<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
	<con:jmsPropertyConfig/>
	<con:parameters>
		<entry key="refContrat" value="${#TestCase#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
	</con:parameters>
</con:restRequest>
</con:config>
</con:testStep>
<con:properties>
	<con:property>
		<con:name>RefCommande</con:name>
		<con:value>2e04ae40-d735-418e-a86d-26557b85b017</con:value>
	</con:property>
	<con:property>
		<con:name>RefContrat</con:name>
		<con:value>00000006</con:value>
	</con:property>
</con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CrÃ©er Contrat avfw.confort" searchProperties="true" id="6480ea2c-6e1a-4a57-8af4-1c256243db6e" disabled="true">
	<con:description>TestCase generated for REST Resource [Validation] located at
      [/contrat-core/contrat/{refContrat}/valider]</con:description>
	<con:settings/>
	<con:testStep type="groovy" name="SetRefCommande" id="3c8a6d06-180e-47e4-af22-c9aeada2c26a">
		<con:settings/>
		<con:config>
			<script>import static java.util.UUID.randomUUID 
def tc = context.testCase 
uuid = randomUUID().toString()
testRunner.testCase.setPropertyValue( "RefCommande", uuid ) 
log.info testRunner.testCase.getPropertyValue("RefCommande")</script>
		</con:config>
	</con:testStep>

	<con:testStep type="restrequest" name="PrÃ©parer Contrat" id="0b0eb555-41cf-4798-9ff0-d818d4346214">
		<con:settings/>
		<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/preparer" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:restRequest name="PrÃ©parer Contrat" mediaType="application/json" postQueryString="false">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "user": "SoapUITest",
  "produits": [
    {
      "numEC" : 1,
      "reference": "avfw.confort",
      "numeroCommande": "${#TestCase#RefCommande}",
      "label": "Antivirus Securitoo",
      "typeProduit": "SERVICE",
      "prix": {
        "periodicite": 1,
        "typeTVA": "R",
        "montant": 4.17,
        "modePaiement": "SEPA",
        "modeFacturation": "DATE_ANNIVERSAIRE"
      }
    }
  ]
}</con:request>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters/>
	</con:restRequest>
</con:config>
</con:testStep>
<con:testStep type="transfer" name="Move Infos Contrat" id="603bf820-43c9-4907-8c81-870e2b4fcb92">
	<con:settings/>
	<con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
			<con:name>Ref Contrat Test Case</con:name>
			<con:sourceType>ResponseAsXml</con:sourceType>
			<con:sourceStep>PrÃ©parer Contrat</con:sourceStep>
			<con:sourcePath>declare namespace ns1='http://si2-srv.si-core.nordnet.fr/contrat-core/contrat/preparer';
//ns1:referenceContrat/text()</con:sourcePath>
			<con:targetType>RefContrat</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
	</con:config>
</con:testStep>
<con:testStep type="restrequest" name="Valider" id="17803cb6-c0a4-4d27-9a45-be486a36a9f2">
	<con:settings/>
	<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/valider" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:restRequest name="Valider" mediaType="application/json" postQueryString="false">
			<con:settings>
				<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
	</con:settings>
	<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
	<con:request>{
  "user": "SoapUITest",
  "idClient": "00003870",
  "idAdrFacturation": "00062264",
  "segmentTVA": "00",
  "paiementInfos": [
    {
      "numEC": 1,
      "referenceProduit": "avfw.confort",
      "idAdrLivraison": "00062264",
      "referenceModePaiement": "SEPA"
    }
  ],
  "politiqueValidation": {
    "fraisCreation": true,
    "checkIsPackagerCreationPossible": true
  }
}</con:request>
	<con:credentials>
		<con:authType>Global HTTP Settings</con:authType>
	</con:credentials>
	<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
	<con:jmsPropertyConfig/>
	<con:parameters>
		<entry key="refContrat" value="${#TestCase#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
	</con:parameters>
</con:restRequest>
</con:config>
</con:testStep>
<con:properties>
	<con:property>
		<con:name>RefCommande</con:name>
		<con:value>e157a6a6-fe23-4f0f-aa7f-fbcdec114dac</con:value>
	</con:property>
	<con:property>
		<con:name>RefContrat</con:name>
		<con:value>00000007</con:value>
	</con:property>
</con:properties>
</con:testCase>
<con:properties/>
</con:testSuite>
<con:testSuite name="Processus - Vente - Antivirus">
	<con:settings/>
	<con:runType>SEQUENTIAL</con:runType>
	<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Vente avfw.essentiel" searchProperties="true">
		<con:settings/>
		<con:testStep type="calltestcase" name="Contrat Antivirus">
			<con:settings/>
			<con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
				<con:targetTestCase>cbe5ee85-876a-408f-aef7-a6c8d4207df7</con:targetTestCase>
				<con:properties>
					<con:property>
						<con:name>RefCommande</con:name>
						<con:value>919b8324-ff5a-46ee-be9b-f7265d65d223</con:value>
					</con:property>
					<con:property>
						<con:name>RefContrat</con:name>
						<con:value>00000033</con:value>
					</con:property>
				</con:properties>
				<con:returnProperties>
					<con:entry>RefCommande</con:entry>
					<con:entry>RefContrat</con:entry>
				</con:returnProperties>
				<con:runMode>SINGLETON_AND_WAIT</con:runMode>
			</con:config>
		</con:testStep>






		<con:testStep type="jdbc" name="Politique Validation">
			<con:settings/>
			<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
				<con:driver>com.mysql.jdbc.Driver</con:driver>
				<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
				<con:query>select * from politiquevalidation 
where id  = 
(select politiqueValidationId from contrat 
  where reference = "${Contrat Antivirus#refContrat}")</con:query>
				<con:assertion type="Simple Contains" name="Frais CrÃ©ation = True">
					<con:configuration>
						<token>&lt;POLITIQUEVALIDATION.FRAISCREATION>1&lt;/POLITIQUEVALIDATION.FRAISCREATION></token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="CheckIsPackagerCreationPossible = False">
			<con:configuration>
				<token>&lt;POLITIQUEVALIDATION.CHECKISPACKAGERCREATIONPOSSIBLE>0&lt;/POLITIQUEVALIDATION.CHECKISPACKAGERCREATIONPOSSIBLE></token>
		<ignoreCase>false</ignoreCase>
		<useRegEx>false</useRegEx>
	</con:configuration>
</con:assertion>
<con:properties/>
</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Contrat">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from contrat 
where reference = "${Contrat Antivirus#refContrat}"</con:query>

		<con:assertion type="XPath Match" name="Date Validation is not null">
			<con:configuration>
				<path>exists(//ResultSet/Row/CONTRAT.DATEVALIDATION/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="DatePreparation Is Not Null">
			<con:configuration>
				<path>exists(//Row/CONTRAT.DATEPREPARATION/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Id Client = 00003870">
			<con:configuration>
				<path>//ResultSet/Row/CONTRAT.IDCLIENT/text()</path>
				<content>00003870</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Politique Validation is not null">
			<con:configuration>
				<path>exists(//ResultSet/Row/CONTRAT.POLITIQUEVALIDATIONID/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="EC Valide">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from elementcontractuel
where contratParent = 
  (select id from contrat
   where reference = "${Contrat Antivirus#refContrat}"
   )</con:query>

		<con:assertion type="XQuery Match" name="Date Validation is not null">
			<con:configuration>
				<path>&lt;Results> 
{ 
for $x in //Row 
order by $x/ELEMENTCONTRACTUEL.NUMEC
return &lt;result>{exists($x/ELEMENTCONTRACTUEL.DATEVALIDATION/text())}&lt;/result> 
}
&lt;/Results></path>
<content>&lt;Results>
  &lt;result>true&lt;/result>
&lt;/Results></content>
<allowWildcards>false</allowWildcards>
</con:configuration>
</con:assertion>
<con:assertion type="XQuery Match" name="Id Adr Livraison">
	<con:configuration>
		<path>&lt;Results> 
{ 
for $x in //Row 
order by $x/ELEMENTCONTRACTUEL.NUMEC
return &lt;result>{$x/ELEMENTCONTRACTUEL.IDADRLIVRAISON/text()}&lt;/result> 
}
&lt;/Results></path>
<content>&lt;Results>
  &lt;result>00062264&lt;/result>
&lt;/Results></content>
<allowWildcards>false</allowWildcards>
</con:configuration>
</con:assertion>
<con:assertion type="XQuery Match" name="Id Adr Facturation">
	<con:configuration>
		<path>&lt;Results> 
{ 
for $x in //Row 
order by $x/ELEMENTCONTRACTUEL.NUMEC
return &lt;result>{$x/ELEMENTCONTRACTUEL.IDADRFACTURATION/text()}&lt;/result> 
}
&lt;/Results></path>
<content>&lt;Results>
  &lt;result>00062264&lt;/result>
&lt;/Results></content>
<allowWildcards>false</allowWildcards>
</con:configuration>
</con:assertion>
<con:assertion type="XQuery Match" name="Remboursable">
	<con:configuration>
		<path>&lt;Results> 
{ 
for $x in //Row 
order by $x/ELEMENTCONTRACTUEL.NUMEC
return &lt;result>{$x/ELEMENTCONTRACTUEL.REMBOURSABLE/text()}&lt;/result> 
}
&lt;/Results></path>
<content>&lt;Results>
  &lt;result>1&lt;/result>
&lt;/Results></content>
<allowWildcards>false</allowWildcards>
</con:configuration>
</con:assertion>
<con:properties/>
</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Tracing - PrÃ©paration &amp; Validation">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * 
from tracage
where referenceContrat = '${Contrat Antivirus#RefContrat}'</con:query>

		<con:assertion type="Simple Contains" name="PrÃ©paration dâun contrat">
			<con:configuration>
				<token>Contrat ${Contrat Antivirus#RefContrat}</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Contrat xxx prÃ©parÃ©">
			<con:configuration>
				<token>Contrat ${Contrat Antivirus#RefContrat} prÃ©parÃ©</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Validation du contrat">
			<con:configuration>
				<token>Validation du contrat ${Contrat Antivirus#RefContrat}</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Contrat xxx validÃ©">
			<con:configuration>
				<token>Contrat ${Contrat Antivirus#RefContrat} validÃ©</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="delay" name="Wait for beginning Livraison">
	<con:settings/>
	<con:config>
		<delay>500</delay>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Bon de Livraison - exists">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from bonpreparation 
where reference = "${Contrat Antivirus#refContrat}"</con:query>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="goto" name="Go Beginning Livraison">
	<con:settings/>
	<con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:condition>
			<con:name>Wait Facturation</con:name>
			<con:type>XPATH</con:type>
			<con:expression>not(//Results/ResultSet/Row/BONPREPARATION.DATEINITIATION/text())</con:expression>
			<con:targetStep>Wait for beginning Livraison</con:targetStep>
		</con:condition>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Bon de Livraison - InitiÃ©">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from bonpreparation 
where reference = "${Contrat Antivirus#refContrat}"</con:query>
		<con:assertion type="XPath Match" name="TypeBonPreparation = Livraison">
			<con:configuration>
				<path>//ResultSet/Row/BONPREPARATION.TYPEBONPREPARATION/text()</path>
				<content>LIVRAISON</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="IdClient">
			<con:configuration>
				<path>//ResultSet/Row/BONPREPARATION.IDCLIENT/text()</path>
				<content>00003870</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>

<con:testStep type="jdbc" name="Elements de Livraison - InitiÃ©">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from elementlivraison 
where bonPreparationParent = 
  (select id 
     from bonpreparation 
    where reference = "${Contrat Antivirus#refContrat}")</con:query>



		<con:assertion type="XPath Match" name="EL InitiÃ©">
			<con:configuration>
				<path>exists(//ResultSet/Row/ELEMENTLIVRAISON.DATEINITIATION/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="NumEC">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.NUMEC/text()</path>
				<content>1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Reference">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.REFERENCE/text()</path>
				<content>${Contrat Antivirus#RefContrat}-1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="AncienCodes Null">
			<con:configuration>
				<path>not(//ResultSet/Row/ELEMENTLIVRAISON.ANCIENCODECOLIS/text())
and
not(//ResultSet/Row/ELEMENTLIVRAISON.ANCIENRETAILERPACKAGERID/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="TypeBonPreparation = Livraison">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.TYPEBONPREPARATION/text()</path>
				<content>LIVRAISON</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Acteur = Pkger">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.ACTEUR/text()</path>
				<content>PACKAGER</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="TypeElmnt = Service">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.ACTEUR/text()</path>
				<content>PACKAGER</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="ReferenceProduit = Antivirus">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.REFERENCEPRODUIT/text()</path>
				<content>avfw.essentiel</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="delay" name="Wait for end Livraison">
	<con:settings/>
	<con:config>
		<delay>500</delay>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Tracing - Initiation" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * 
from tracage
where referenceContrat = '${Contrat Antivirus#RefContrat}'</con:query>

		<con:assertion type="Simple Contains" name="Initiation du BP">
			<con:configuration>
				<token>Livraison du contrat ${Contrat Antivirus#RefContrat} â PrÃ©paration de la livraison</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Initiation de l'EL - antivirus">
			<con:configuration>
				<token>PrÃ©paration de la livraison du produit avfw.essentiel</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Bon de Livraison - TÃ©moin">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from bonpreparation 
where reference = "${Contrat Antivirus#refContrat}"</con:query>
		<con:assertion type="XPath Match" name="Date Initiation">
			<con:configuration>
				<path>exists(//Row/BONPREPARATION.DATEINITIATION/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>

		<con:assertion type="XPath Match" name="Aucune Erreur de Livraison">
			<con:configuration>
				<path>not(//ResultSet/Row/BONPREPARATION.CAUSENONLIVRAISON/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="goto" name="Go End Livraison">
	<con:settings/>
	<con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:condition>
			<con:name>Wait Facturation</con:name>
			<con:type>XPATH</con:type>
			<con:expression>not(//ResultSet/Row/BONPREPARATION.DATELIVRAISONTERMINE/text()) 
and
not(//ResultSet/Row/BONPREPARATION.CAUSENONLIVRAISON/text())</con:expression>
			<con:targetStep>Wait for end Livraison</con:targetStep>
		</con:condition>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Elements de Livraison - LivrÃ©">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from elementlivraison 
where bonPreparationParent = 
  (select id 
     from bonpreparation 
    where reference = "${Contrat Antivirus#refContrat}")</con:query>



		<con:assertion type="XPath Match" name="EL LivrÃ©">
			<con:configuration>
				<path>not(//ResultSet/Row/ELEMENTLIVRAISON.CAUSENONLIVRAISON/text())
and
exists(//ResultSet/Row/ELEMENTLIVRAISON.DATELIVRAISONTERMINE/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="NumEC">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.NUMEC/text()</path>
				<content>1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Reference">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.REFERENCE/text()</path>
				<content>${Contrat Antivirus#RefContrat}-1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="AncienCodes Null">
			<con:configuration>
				<path>not(//ResultSet/Row/ELEMENTLIVRAISON.ANCIENCODECOLIS/text())
and
not(//ResultSet/Row/ELEMENTLIVRAISON.ANCIENRETAILERPACKAGERID/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Code Produit Not Null">
			<con:configuration>
				<path>exists(//ResultSet/Row/ELEMENTLIVRAISON.RETAILERPACKAGERID/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Code Colis Null">
			<con:configuration>
				<path>not(//ResultSet/Row/ELEMENTLIVRAISON.CODECOLIS/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="TypeBonPreparation = Livraison">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.TYPEBONPREPARATION/text()</path>
				<content>LIVRAISON</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Acteur = Pkger">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.ACTEUR/text()</path>
				<content>PACKAGER</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="ReferenceProduit = Antivirus">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.REFERENCEPRODUIT/text()</path>
				<content>avfw.essentiel</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Bon de Livraison - LivrÃ©">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from bonpreparation 
where reference = "${Contrat Antivirus#refContrat}"</con:query>
		<con:assertion type="XPath Match" name="DateLivraisonTermine Not Null">
			<con:configuration>
				<path>exists(//ResultSet/Row/BONPREPARATION.DATELIVRAISONTERMINE/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="CauseNonLivraison Null">
			<con:configuration>
				<path>not(//ResultSet/Row/BONPREPARATION.CAUSENONLIVRAISON/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="IdClient">
			<con:configuration>
				<path>//ResultSet/Row/BONPREPARATION.IDCLIENT</path>
				<content>00003870</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="TypeBonPreparation = Livraison">
			<con:configuration>
				<path>//ResultSet/Row/BONPREPARATION.TYPEBONPREPARATION</path>
				<content>LIVRAISON</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Dates Workflow">
			<con:configuration>
				<path>exists(//ResultSet/Row/BONPREPARATION.DATEINITIATION/text())
and
exists(//ResultSet/Row/BONPREPARATION.DATEDEBUTPREPARATION/text())
and
exists(//ResultSet/Row/BONPREPARATION.DATEPREPARATION/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="DateRetourTermine Null">
			<con:configuration>
				<path>exists(//ResultSet/Row/BONPREPARATION.DATERETOURTERMINE/text())</path>
				<content>false</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Tracing - Livraison" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * 
from tracage
where referenceContrat = '${Contrat Antivirus#RefContrat}'</con:query>

		<con:assertion type="Simple Contains" name="PrÃ©paration du contrat">
			<con:configuration>
				<token>Contrat ${Contrat Antivirus#RefContrat} validÃ©</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="PrÃ©paration de l'EL antivirus">
			<con:configuration>
				<token>Contrat ${Contrat Antivirus#RefContrat} validÃ©</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Livraison du contrat">
			<con:configuration>
				<token>Livraison du contrat ${Contrat Antivirus#RefContrat} â Fin de livraison</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Livraison de l'EL antivirus">
			<con:configuration>
				<token>Livraison du contrat ${Contrat Antivirus#RefContrat} â Fin de livraison du produit avfwpro-confort-s</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="transfer" name="Transfert Date Livraison" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
			<con:name>DateLivraison</con:name>
			<con:sourceType>ResponseAsXml</con:sourceType>
			<con:sourceStep>Bon de Livraison - TÃ©moin</con:sourceStep>
			<con:sourcePath>//Results/ResultSet/Row/BONPREPARATION.DATELIVRAISONTERMINE/text()</con:sourcePath>
			<con:targetType>DateLivraison</con:targetType>
			<con:targetStep>InfosFacture</con:targetStep>
		</con:transfers>
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true">
			<con:name>ReferenceContrat</con:name>
			<con:sourceType>RefContrat</con:sourceType>
			<con:sourceStep>Contrat Antivirus</con:sourceStep>
			<con:sourcePath/>
			<con:targetType>RefContrat</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true">
			<con:name>ReferenceCommande</con:name>
			<con:sourceType>RefCommande</con:sourceType>
			<con:sourceStep>Contrat Antivirus</con:sourceStep>
			<con:targetType>RefCommande</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
	</con:config>
</con:testStep>
<con:testStep type="properties" name="InfosFacture" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:properties>
			<con:property>
				<con:name>DateLivraison</con:name>
				<con:value>2014-11-06 16:13:30.0</con:value>
			</con:property>
		</con:properties>
	</con:config>
</con:testStep>
<con:testStep type="delay" name="Wait for end Facturation" disabled="true">
	<con:settings/>
	<con:config>
		<delay>500</delay>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Facturation-exists" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://10.100.105.41:3306/test_saphir?user=test&amp;password=test</con:connectionString>
		<con:query>select * from movement 
where 
--      accountId = '00003870'
--  and productId = 'avfwpro-confort-s'
--  and minute(timediff(now(), create_date)) &lt; 1
  /*and*/ id IN (
  	select movement_idFK 
  	  from movement_appendix_item 
  	 where productReferenceId = '${Contrat Antivirus#RefContrat}'
  )
;</con:query>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="goto" name="Go Facturation" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:condition>
			<con:name>Wait Facturation</con:name>
			<con:type>XPATH</con:type>
			<con:expression>not(//Results/ResultSet/Row/MOVEMENT.ID/text())</con:expression>
			<con:targetStep>Wait for end Facturation</con:targetStep>
		</con:condition>
	</con:config>
</con:testStep>
<con:testStep type="groovy" name="Calcul Periodes" disabled="true">
	<con:settings/>
	<con:config>
		<script>def cal = Calendar.instance

testRunner.testCase.setPropertyValue("dateDebut", String.format('%tF', cal))
log.info testRunner.testCase.getPropertyValue("dateDebut")

cal.roll(Calendar.MONTH, 1)

testRunner.testCase.setPropertyValue("dateFin", String.format('%tF', cal))
log.info testRunner.testCase.getPropertyValue("dateFin")</script>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Tracing - Facturation" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * 
from tracage
where referenceContrat = '${Contrat Antivirus#RefContrat}'</con:query>

		<con:assertion type="Simple Contains" name="Facturation des frais de crÃ©ation">
			<con:configuration>
				<token>Facturation des frais de crÃ©ation du contrat ${Contrat Antivirus#RefContrat}</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Facturation rÃ©currente">
			<con:configuration>
				<token>Facturation rÃ©currente pour la pÃ©riode du ${#TestCase#DateDebut} au ${#TestCase#DateFin} du contrat ${Contrat Antivirus#RefContrat}</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Facturation-valid" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://10.100.105.41:3306/test_saphir?user=test&amp;password=test</con:connectionString>
		<con:query>select * from movement 
where accountId = '00003870'
  and minute(timediff(now(), create_date)) &lt; 1
  and id IN (
  	select movement_idFK 
  	  from movement_appendix_item 
  	 where productReferenceId = '${Contrat Antivirus#RefContrat}'
  )
;</con:query>





		<con:assertion type="XPath Match" name="Bill Type = Monthly">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.BILL_TYPE/text()</path>
				<content>MONTHLY</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Billing Group Null">
			<con:configuration>
				<path>not(//ResultSet/Row/MOVEMENT.BILLINGGROUP/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="CanGrouped = True">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.CANGROUPED/text()</path>
				<content>1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XQuery Match" name="Payment Infos">
			<con:configuration>
				<path><![CDATA[
					<Results>
{
  for $x in //Row
  return <r>
    <payementType>{$x/MOVEMENT.PAYMENT_TYPE/text()}</payementType>
    <payementRef>{$x/MOVEMENT.RUM/text()}</payementRef>
  </r>
}
</Results>]]></path>
				<content><![CDATA[
					<Results>
  <r>
    <payementType>SEPA</payementType>
    <payementRef>R0000012</payementRef>
  </r>
</Results>]]></content>
				<allowWildcards>false</allowWildcards>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="TransactionType = Debit">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.TRANSACTIONTYPE/text()</path>
				<content>DEBIT</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XQuery Match" name="Compta Infos">
			<con:configuration>
				<path><![CDATA[
					<Results>
{
  for $x in //Row
  return <r>
    <vat>{$x/MOVEMENT.VAT_TYPE/text()}</vat>
    <curr>{$x/MOVEMENT.CURRENCY/text()}</curr>
  </r>
}
</Results>]]></path>
				<content><![CDATA[
					<Results>
  <r>
    <vat>R</vat>
    <curr>EUR</curr>
  </r>
</Results>]]></content>
				<allowWildcards>false</allowWildcards>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Amount = 5">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.AMOUNT/text()</path>
				<content>5.000000</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="ProductLabel" disabled="true">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.PRODUCTLABEL/text()</path>
				<content> Abonnement Antivirus Securitoo du ${=new java.text.SimpleDateFormat("yyyy-MM-dd").format(new Date())} au ${=Calendar.instance.get(Calendar.YEAR)+"-"+(int)(Calendar.instance.get(Calendar.MONTH)+2)+"-"+Calendar.instance.get(Calendar.DATE)} (Dossier Produit : ${Contrat Antivirus#RefContrat})</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Date Start">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.STARTFROM/text()</path>
				<content>${#TestCase#DateDebut}</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Periode - Date End">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.ENDTO/text()</path>
				<content>${#TestCase#DateFin}</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="ProductId = avfwpro-confort-s">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.PRODUCTID/text()</path>
				<content>avfwpro-confort-s</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:loadTest name="Test Create">
	<con:settings/>
	<con:threadCount>50</con:threadCount>
	<con:startDelay>0</con:startDelay>
	<con:sampleInterval>250</con:sampleInterval>
	<con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
	<con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
	<con:historyLimit>-1</con:historyLimit>
	<con:testLimit>60</con:testLimit>
	<con:limitType>TIME</con:limitType>
	<con:loadStrategy>
		<con:type>Simple</con:type>
	</con:loadStrategy>
	<con:assertion type="Step Status" name="Step Status"/>
	<con:maxAssertionErrors>100</con:maxAssertionErrors>
	<con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
	<con:strategyInterval>500</con:strategyInterval>
</con:loadTest>
<con:properties>
	<con:property>
		<con:name>RefCommande</con:name>
		<con:value>42358292-6dfa-4882-a652-a39843ee4df9</con:value>
	</con:property>
	<con:property>
		<con:name>RefContrat</con:name>
		<con:value>fb5c1153</con:value>
	</con:property>
	<con:property>
		<con:name>testDate</con:name>
		<con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
	</con:property>
	<con:property>
		<con:name>testDates</con:name>
		<con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
	</con:property>
	<con:property>
		<con:name>dateDebut</con:name>
		<con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014-10-15</con:value>
	</con:property>
	<con:property>
		<con:name>dateFin</con:name>
		<con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014-11-15</con:value>
	</con:property>
</con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Vente mobileprotection.essentiel.s" searchProperties="true">
	<con:settings/>
	<con:testStep type="calltestcase" name="Contrat Antivirus">
		<con:settings/>
		<con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:targetTestCase>5d1b55f5-cfd0-4a19-9298-093a914d899c</con:targetTestCase>
			<con:properties>
				<con:property>
					<con:name>RefCommande</con:name>
					<con:value>919b8324-ff5a-46ee-be9b-f7265d65d223</con:value>
				</con:property>
				<con:property>
					<con:name>RefContrat</con:name>
					<con:value>00000033</con:value>
				</con:property>
			</con:properties>
			<con:returnProperties>
				<con:entry>RefCommande</con:entry>
				<con:entry>RefContrat</con:entry>
			</con:returnProperties>
			<con:runMode>SINGLETON_AND_WAIT</con:runMode>
		</con:config>
	</con:testStep>






	<con:testStep type="jdbc" name="Politique Validation">
		<con:settings/>
		<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:driver>com.mysql.jdbc.Driver</con:driver>
			<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
			<con:query>select * from politiquevalidation 
where id  = 
(select politiqueValidationId from contrat 
  where reference = "${Contrat Antivirus#refContrat}")</con:query>
			<con:assertion type="Simple Contains" name="Frais CrÃ©ation = True">
				<con:configuration>
					<token>&lt;POLITIQUEVALIDATION.FRAISCREATION>1&lt;/POLITIQUEVALIDATION.FRAISCREATION></token>
			<ignoreCase>false</ignoreCase>
			<useRegEx>false</useRegEx>
		</con:configuration>
	</con:assertion>
	<con:assertion type="Simple Contains" name="CheckIsPackagerCreationPossible = False">
		<con:configuration>
			<token>&lt;POLITIQUEVALIDATION.CHECKISPACKAGERCREATIONPOSSIBLE>0&lt;/POLITIQUEVALIDATION.CHECKISPACKAGERCREATIONPOSSIBLE></token>
	<ignoreCase>false</ignoreCase>
	<useRegEx>false</useRegEx>
</con:configuration>
</con:assertion>
<con:properties/>
</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Contrat">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from contrat 
where reference = "${Contrat Antivirus#refContrat}"</con:query>

		<con:assertion type="XPath Match" name="Date Validation is not null">
			<con:configuration>
				<path>exists(//ResultSet/Row/CONTRAT.DATEVALIDATION/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="DatePreparation Is Not Null">
			<con:configuration>
				<path>exists(//Row/CONTRAT.DATEPREPARATION/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Id Client = 00003870">
			<con:configuration>
				<path>//ResultSet/Row/CONTRAT.IDCLIENT/text()</path>
				<content>00003870</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Politique Validation is not null">
			<con:configuration>
				<path>exists(//ResultSet/Row/CONTRAT.POLITIQUEVALIDATIONID/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="EC Valide">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from elementcontractuel
where contratParent = 
  (select id from contrat
   where reference = "${Contrat Antivirus#refContrat}"
   )</con:query>

		<con:assertion type="XQuery Match" name="Date Validation is not null">
			<con:configuration>
				<path>&lt;Results> 
{ 
for $x in //Row 
order by $x/ELEMENTCONTRACTUEL.NUMEC
return &lt;result>{exists($x/ELEMENTCONTRACTUEL.DATEVALIDATION/text())}&lt;/result> 
}
&lt;/Results></path>
<content>&lt;Results>
  &lt;result>true&lt;/result>
&lt;/Results></content>
<allowWildcards>false</allowWildcards>
</con:configuration>
</con:assertion>
<con:assertion type="XQuery Match" name="Id Adr Livraison">
	<con:configuration>
		<path>&lt;Results> 
{ 
for $x in //Row 
order by $x/ELEMENTCONTRACTUEL.NUMEC
return &lt;result>{$x/ELEMENTCONTRACTUEL.IDADRLIVRAISON/text()}&lt;/result> 
}
&lt;/Results></path>
<content>&lt;Results>
  &lt;result>00062264&lt;/result>

&lt;/Results></content>
<allowWildcards>false</allowWildcards>
</con:configuration>
</con:assertion>
<con:assertion type="XQuery Match" name="Id Adr Facturation">
	<con:configuration>
		<path>&lt;Results> 
{ 
for $x in //Row 
order by $x/ELEMENTCONTRACTUEL.NUMEC
return &lt;result>{$x/ELEMENTCONTRACTUEL.IDADRFACTURATION/text()}&lt;/result> 
}
&lt;/Results></path>
<content>&lt;Results>
  &lt;result>00062264&lt;/result>

&lt;/Results></content>
<allowWildcards>false</allowWildcards>
</con:configuration>
</con:assertion>
<con:assertion type="XQuery Match" name="Remboursable">
	<con:configuration>
		<path>&lt;Results> 
{ 
for $x in //Row 
order by $x/ELEMENTCONTRACTUEL.NUMEC
return &lt;result>{$x/ELEMENTCONTRACTUEL.REMBOURSABLE/text()}&lt;/result> 
}
&lt;/Results></path>
<content>&lt;Results>
  &lt;result>1&lt;/result>
&lt;/Results></content>
<allowWildcards>false</allowWildcards>
</con:configuration>
</con:assertion>
<con:properties/>
</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Tracing - PrÃ©paration &amp; Validation">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * 
from tracage
where referenceContrat = '${Contrat Antivirus#RefContrat}'</con:query>

		<con:assertion type="Simple Contains" name="PrÃ©paration dâun contrat">
			<con:configuration>
				<token>Contrat ${Contrat Antivirus#RefContrat}</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Contrat xxx prÃ©parÃ©">
			<con:configuration>
				<token>Contrat ${Contrat Antivirus#RefContrat} prÃ©parÃ©</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Validation du contrat">
			<con:configuration>
				<token>Validation du contrat ${Contrat Antivirus#RefContrat}</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Contrat xxx validÃ©">
			<con:configuration>
				<token>Contrat ${Contrat Antivirus#RefContrat} validÃ©</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="delay" name="Wait for beginning Livraison">
	<con:settings/>
	<con:config>
		<delay>500</delay>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Bon de Livraison - exists">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from bonpreparation 
where reference = "${Contrat Antivirus#refContrat}"</con:query>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="goto" name="Go Beginning Livraison">
	<con:settings/>
	<con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:condition>
			<con:name>Wait Facturation</con:name>
			<con:type>XPATH</con:type>
			<con:expression>not(//Results/ResultSet/Row/BONPREPARATION.DATEINITIATION/text())</con:expression>
			<con:targetStep>Wait for beginning Livraison</con:targetStep>
		</con:condition>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Bon de Livraison - InitiÃ©">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from bonpreparation 
where reference = "${Contrat Antivirus#refContrat}"</con:query>
		<con:assertion type="XPath Match" name="TypeBonPreparation = Livraison">
			<con:configuration>
				<path>//ResultSet/Row/BONPREPARATION.TYPEBONPREPARATION/text()</path>
				<content>LIVRAISON</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="IdClient">
			<con:configuration>
				<path>//ResultSet/Row/BONPREPARATION.IDCLIENT/text()</path>
				<content>00003870</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>

<con:testStep type="jdbc" name="Elements de Livraison - InitiÃ©">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from elementlivraison 
where bonPreparationParent = 
  (select id 
     from bonpreparation 
    where reference = "${Contrat Antivirus#refContrat}")</con:query>



		<con:assertion type="XPath Match" name="EL InitiÃ©">
			<con:configuration>
				<path>exists(//ResultSet/Row/ELEMENTLIVRAISON.DATEINITIATION/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="NumEC">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.NUMEC/text()</path>
				<content>1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Reference">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.REFERENCE/text()</path>
				<content>${Contrat Antivirus#RefContrat}-1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="AncienCodes Null">
			<con:configuration>
				<path>not(//ResultSet/Row/ELEMENTLIVRAISON.ANCIENCODECOLIS/text())
and
not(//ResultSet/Row/ELEMENTLIVRAISON.ANCIENRETAILERPACKAGERID/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="TypeBonPreparation = Livraison">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.TYPEBONPREPARATION/text()</path>
				<content>LIVRAISON</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Acteur = Pkger">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.ACTEUR/text()</path>
				<content>PACKAGER</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="TypeElmnt = Service">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.ACTEUR/text()</path>
				<content>PACKAGER</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="ReferenceProduit = Antivirus">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.REFERENCEPRODUIT/text()</path>
				<content>avfw.essentiel</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="delay" name="Wait for end Livraison">
	<con:settings/>
	<con:config>
		<delay>500</delay>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Tracing - Initiation" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * 
from tracage
where referenceContrat = '${Contrat Antivirus#RefContrat}'</con:query>

		<con:assertion type="Simple Contains" name="Initiation du BP">
			<con:configuration>
				<token>Livraison du contrat ${Contrat Antivirus#RefContrat} â PrÃ©paration de la livraison</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Initiation de l'EL - antivirus">
			<con:configuration>
				<token>PrÃ©paration de la livraison du produit avfw.essentiel</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Bon de Livraison - TÃ©moin">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from bonpreparation 
where reference = "${Contrat Antivirus#refContrat}"</con:query>
		<con:assertion type="XPath Match" name="Date Initiation">
			<con:configuration>
				<path>exists(//Row/BONPREPARATION.DATEINITIATION/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>

		<con:assertion type="XPath Match" name="Aucune Erreur de Livraison">
			<con:configuration>
				<path>not(//ResultSet/Row/BONPREPARATION.CAUSENONLIVRAISON/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="goto" name="Go End Livraison">
	<con:settings/>
	<con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:condition>
			<con:name>Wait Facturation</con:name>
			<con:type>XPATH</con:type>
			<con:expression>not(//ResultSet/Row/BONPREPARATION.DATELIVRAISONTERMINE/text()) 
and
not(//ResultSet/Row/BONPREPARATION.CAUSENONLIVRAISON/text())</con:expression>
			<con:targetStep>Wait for end Livraison</con:targetStep>
		</con:condition>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Elements de Livraison - LivrÃ©">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from elementlivraison 
where bonPreparationParent = 
  (select id 
     from bonpreparation 
    where reference = "${Contrat Antivirus#refContrat}")</con:query>



		<con:assertion type="XPath Match" name="EL LivrÃ©">
			<con:configuration>
				<path>not(//ResultSet/Row/ELEMENTLIVRAISON.CAUSENONLIVRAISON/text())
and
exists(//ResultSet/Row/ELEMENTLIVRAISON.DATELIVRAISONTERMINE/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="NumEC">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.NUMEC/text()</path>
				<content>1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Reference">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.REFERENCE/text()</path>
				<content>${Contrat Antivirus#RefContrat}-1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="AncienCodes Null">
			<con:configuration>
				<path>not(//ResultSet/Row/ELEMENTLIVRAISON.ANCIENCODECOLIS/text())
and
not(//ResultSet/Row/ELEMENTLIVRAISON.ANCIENRETAILERPACKAGERID/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Code Produit Not Null">
			<con:configuration>
				<path>exists(//ResultSet/Row/ELEMENTLIVRAISON.RETAILERPACKAGERID/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Code Colis Null">
			<con:configuration>
				<path>not(//ResultSet/Row/ELEMENTLIVRAISON.CODECOLIS/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="TypeBonPreparation = Livraison">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.TYPEBONPREPARATION/text()</path>
				<content>LIVRAISON</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Acteur = Pkger">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.ACTEUR/text()</path>
				<content>PACKAGER</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="ReferenceProduit = Antivirus">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.REFERENCEPRODUIT/text()</path>
				<content>avfw.essentiel</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Bon de Livraison - LivrÃ©">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from bonpreparation 
where reference = "${Contrat Antivirus#refContrat}"</con:query>
		<con:assertion type="XPath Match" name="DateLivraisonTermine Not Null">
			<con:configuration>
				<path>exists(//ResultSet/Row/BONPREPARATION.DATELIVRAISONTERMINE/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="CauseNonLivraison Null">
			<con:configuration>
				<path>not(//ResultSet/Row/BONPREPARATION.CAUSENONLIVRAISON/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="IdClient">
			<con:configuration>
				<path>//ResultSet/Row/BONPREPARATION.IDCLIENT</path>
				<content>00003870</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="TypeBonPreparation = Livraison">
			<con:configuration>
				<path>//ResultSet/Row/BONPREPARATION.TYPEBONPREPARATION</path>
				<content>LIVRAISON</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Dates Workflow">
			<con:configuration>
				<path>exists(//ResultSet/Row/BONPREPARATION.DATEINITIATION/text())
and
exists(//ResultSet/Row/BONPREPARATION.DATEDEBUTPREPARATION/text())
and
exists(//ResultSet/Row/BONPREPARATION.DATEPREPARATION/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="DateRetourTermine Null">
			<con:configuration>
				<path>exists(//ResultSet/Row/BONPREPARATION.DATERETOURTERMINE/text())</path>
				<content>false</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Tracing - Livraison" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * 
from tracage
where referenceContrat = '${Contrat Antivirus#RefContrat}'</con:query>

		<con:assertion type="Simple Contains" name="PrÃ©paration du contrat">
			<con:configuration>
				<token>Contrat ${Contrat Antivirus#RefContrat} validÃ©</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="PrÃ©paration de l'EL antivirus">
			<con:configuration>
				<token>Contrat ${Contrat Antivirus#RefContrat} validÃ©</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Livraison du contrat">
			<con:configuration>
				<token>Livraison du contrat ${Contrat Antivirus#RefContrat} â Fin de livraison</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Livraison de l'EL antivirus">
			<con:configuration>
				<token>Livraison du contrat ${Contrat Antivirus#RefContrat} â Fin de livraison du produit avfwpro-confort-s</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="transfer" name="Transfert Date Livraison" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
			<con:name>DateLivraison</con:name>
			<con:sourceType>ResponseAsXml</con:sourceType>
			<con:sourceStep>Bon de Livraison - TÃ©moin</con:sourceStep>
			<con:sourcePath>//Results/ResultSet/Row/BONPREPARATION.DATELIVRAISONTERMINE/text()</con:sourcePath>
			<con:targetType>DateLivraison</con:targetType>
			<con:targetStep>InfosFacture</con:targetStep>
		</con:transfers>
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true">
			<con:name>ReferenceContrat</con:name>
			<con:sourceType>RefContrat</con:sourceType>
			<con:sourceStep>Contrat Antivirus</con:sourceStep>
			<con:sourcePath/>
			<con:targetType>RefContrat</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true">
			<con:name>ReferenceCommande</con:name>
			<con:sourceType>RefCommande</con:sourceType>
			<con:sourceStep>Contrat Antivirus</con:sourceStep>
			<con:targetType>RefCommande</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
	</con:config>
</con:testStep>
<con:testStep type="properties" name="InfosFacture" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:properties>
			<con:property>
				<con:name>DateLivraison</con:name>
				<con:value>2014-11-06 16:13:30.0</con:value>
			</con:property>
		</con:properties>
	</con:config>
</con:testStep>
<con:testStep type="delay" name="Wait for end Facturation" disabled="true">
	<con:settings/>
	<con:config>
		<delay>500</delay>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Facturation-exists" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://10.100.105.41:3306/test_saphir?user=test&amp;password=test</con:connectionString>
		<con:query>select * from movement 
where 
--      accountId = '00003870'
--  and productId = 'avfwpro-confort-s'
--  and minute(timediff(now(), create_date)) &lt; 1
  /*and*/ id IN (
  	select movement_idFK 
  	  from movement_appendix_item 
  	 where productReferenceId = '${Contrat Antivirus#RefContrat}'
  )
;</con:query>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="goto" name="Go Facturation" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:condition>
			<con:name>Wait Facturation</con:name>
			<con:type>XPATH</con:type>
			<con:expression>not(//Results/ResultSet/Row/MOVEMENT.ID/text())</con:expression>
			<con:targetStep>Wait for end Facturation</con:targetStep>
		</con:condition>
	</con:config>
</con:testStep>
<con:testStep type="groovy" name="Calcul Periodes" disabled="true">
	<con:settings/>
	<con:config>
		<script>def cal = Calendar.instance

testRunner.testCase.setPropertyValue("dateDebut", String.format('%tF', cal))
log.info testRunner.testCase.getPropertyValue("dateDebut")

cal.roll(Calendar.MONTH, 1)

testRunner.testCase.setPropertyValue("dateFin", String.format('%tF', cal))
log.info testRunner.testCase.getPropertyValue("dateFin")</script>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Tracing - Facturation" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * 
from tracage
where referenceContrat = '${Contrat Antivirus#RefContrat}'</con:query>

		<con:assertion type="Simple Contains" name="Facturation des frais de crÃ©ation">
			<con:configuration>
				<token>Facturation des frais de crÃ©ation du contrat ${Contrat Antivirus#RefContrat}</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Facturation rÃ©currente">
			<con:configuration>
				<token>Facturation rÃ©currente pour la pÃ©riode du ${#TestCase#DateDebut} au ${#TestCase#DateFin} du contrat ${Contrat Antivirus#RefContrat}</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Facturation-valid" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://10.100.105.41:3306/test_saphir?user=test&amp;password=test</con:connectionString>
		<con:query>select * from movement 
where accountId = '00003870'
  and minute(timediff(now(), create_date)) &lt; 1
  and id IN (
  	select movement_idFK 
  	  from movement_appendix_item 
  	 where productReferenceId = '${Contrat Antivirus#RefContrat}'
  )
;</con:query>





		<con:assertion type="XPath Match" name="Bill Type = Monthly">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.BILL_TYPE/text()</path>
				<content>MONTHLY</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Billing Group Null">
			<con:configuration>
				<path>not(//ResultSet/Row/MOVEMENT.BILLINGGROUP/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="CanGrouped = True">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.CANGROUPED/text()</path>
				<content>1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XQuery Match" name="Payment Infos">
			<con:configuration>
				<path><![CDATA[
					<Results>
{
  for $x in //Row
  return <r>
    <payementType>{$x/MOVEMENT.PAYMENT_TYPE/text()}</payementType>
    <payementRef>{$x/MOVEMENT.RUM/text()}</payementRef>
  </r>
}
</Results>]]></path>
				<content><![CDATA[
					<Results>
  <r>
    <payementType>SEPA</payementType>
    <payementRef>R0000012</payementRef>
  </r>
</Results>]]></content>
				<allowWildcards>false</allowWildcards>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="TransactionType = Debit">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.TRANSACTIONTYPE/text()</path>
				<content>DEBIT</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XQuery Match" name="Compta Infos">
			<con:configuration>
				<path><![CDATA[
					<Results>
{
  for $x in //Row
  return <r>
    <vat>{$x/MOVEMENT.VAT_TYPE/text()}</vat>
    <curr>{$x/MOVEMENT.CURRENCY/text()}</curr>
  </r>
}
</Results>]]></path>
				<content><![CDATA[
					<Results>
  <r>
    <vat>R</vat>
    <curr>EUR</curr>
  </r>
</Results>]]></content>
				<allowWildcards>false</allowWildcards>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Amount = 5">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.AMOUNT/text()</path>
				<content>5.000000</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="ProductLabel" disabled="true">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.PRODUCTLABEL/text()</path>
				<content> Abonnement Antivirus Securitoo du ${=new java.text.SimpleDateFormat("yyyy-MM-dd").format(new Date())} au ${=Calendar.instance.get(Calendar.YEAR)+"-"+(int)(Calendar.instance.get(Calendar.MONTH)+2)+"-"+Calendar.instance.get(Calendar.DATE)} (Dossier Produit : ${Contrat Antivirus#RefContrat})</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Date Start">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.STARTFROM/text()</path>
				<content>${#TestCase#DateDebut}</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Periode - Date End">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.ENDTO/text()</path>
				<content>${#TestCase#DateFin}</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="ProductId = avfwpro-confort-s">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.PRODUCTID/text()</path>
				<content>avfwpro-confort-s</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:loadTest name="Test Create">
	<con:settings/>
	<con:threadCount>50</con:threadCount>
	<con:startDelay>0</con:startDelay>
	<con:sampleInterval>250</con:sampleInterval>
	<con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
	<con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
	<con:historyLimit>-1</con:historyLimit>
	<con:testLimit>60</con:testLimit>
	<con:limitType>TIME</con:limitType>
	<con:loadStrategy>
		<con:type>Simple</con:type>
	</con:loadStrategy>
	<con:assertion type="Step Status" name="Step Status"/>
	<con:maxAssertionErrors>100</con:maxAssertionErrors>
	<con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
	<con:strategyInterval>500</con:strategyInterval>
</con:loadTest>
<con:properties>
	<con:property>
		<con:name>RefCommande</con:name>
		<con:value>42358292-6dfa-4882-a652-a39843ee4df9</con:value>
	</con:property>
	<con:property>
		<con:name>RefContrat</con:name>
		<con:value>fb5c1153</con:value>
	</con:property>
	<con:property>
		<con:name>testDate</con:name>
		<con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
	</con:property>
	<con:property>
		<con:name>testDates</con:name>
		<con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
	</con:property>
	<con:property>
		<con:name>dateDebut</con:name>
		<con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014-10-15</con:value>
	</con:property>
	<con:property>
		<con:name>dateFin</con:name>
		<con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014-11-15</con:value>
	</con:property>
</con:properties>
</con:testCase>
<con:properties/>
</con:testSuite>
<con:testSuite name="Processus - Resiliation - Antivirus" id="82b19b06-3812-4853-91ee-c295a2dd3ac7">
	<con:settings/>
	<con:runType>SEQUENTIAL</con:runType>
	<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RÃ©siliation directe  avfw.essentiel - RIC - Remboursement" searchProperties="true" id="8c9f6b92-f985-4565-8eb6-d661fcceff54">
		<con:settings/>
		<con:testStep type="calltestcase" name="CrÃ©er" id="69b06b62-33f9-4cc1-af5e-162b88c65399">
			<con:settings/>
			<con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
				<con:targetTestCase>cbe5ee85-876a-408f-aef7-a6c8d4207df7</con:targetTestCase>
				<con:properties>
					<con:property>
						<con:name>RefCommande</con:name>
					</con:property>
					<con:property>
						<con:name>RefContrat</con:name>
					</con:property>
				</con:properties>
				<con:returnProperties>
					<con:entry>RefContrat</con:entry>
				</con:returnProperties>
				<con:runMode>SINGLETON_AND_WAIT</con:runMode>
			</con:config>
		</con:testStep>
		<con:testStep type="restrequest" name="Resilier" id="b3acbb55-3c8a-41b8-a314-97091c4249c3">
			<con:settings/>
			<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/resilier" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
				<con:restRequest name="Resilier" mediaType="application/json" postQueryString="false">
					<con:settings>
						<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
			</con:settings>
			<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
			<con:request>{
  "politiqueResiliation": {
    "typeResiliation": "RIC",
    "motif": "RESILIATION_SANS_REMBOURSEMENT",
    "commentaire": "Ceci n'est qu'un test factice",
    "fraisResiliation": true,
    "montantResiliation": null,
    "remboursement": false,
    "montantRemboursement": null,
    "penalite": true
    "dateResiliation": null,
  },
  "user": "SoapUITest"
}</con:request>
			<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
				<con:configuration>
					<codes>200</codes>
				</con:configuration>
			</con:assertion>
			<con:credentials>
				<con:authType>Global HTTP Settings</con:authType>
			</con:credentials>
			<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
			<con:jmsPropertyConfig/>
			<con:parameters>
				<entry key="refContrat" value="${CrÃ©er#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
			</con:parameters>
		</con:restRequest>
	</con:config>
</con:testStep>
<con:properties/>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RÃ©siliation directe  avfw.essentiel - RIC - Sans Remboursement" searchProperties="true" id="21a519ba-1718-4150-a9ea-7a74d3e2da81">
	<con:settings/>
	<con:testStep type="calltestcase" name="CrÃ©er" id="b54eaf2a-adc5-41f6-8f49-0ece5a9d6947">
		<con:settings/>
		<con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:targetTestCase>cbe5ee85-876a-408f-aef7-a6c8d4207df7</con:targetTestCase>
			<con:properties>
				<con:property>
					<con:name>RefCommande</con:name>
				</con:property>
				<con:property>
					<con:name>RefContrat</con:name>
				</con:property>
			</con:properties>
			<con:returnProperties>
				<con:entry>RefContrat</con:entry>
			</con:returnProperties>
			<con:runMode>SINGLETON_AND_WAIT</con:runMode>
		</con:config>
	</con:testStep>
	<con:testStep type="restrequest" name="Resilier" id="da6bab38-ad30-4fd1-8a75-e34c8376b316">
		<con:settings/>
		<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/resilier" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:restRequest name="Resilier" mediaType="application/json" postQueryString="false">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "politiqueResiliation": {
    "typeResiliation": "RIC",
    "motif": "REMBOURSEMENT",
    "commentaire": "Ceci n'est qu'un test factice",
    "fraisResiliation": true,
    "montantResiliation": null,
    "remboursement": true,
    "montantRemboursement": null,
    "penalite": true
    "dateResiliation": null,
  },
  "user": "SoapUITest"
}</con:request>
		<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
			<con:configuration>
				<codes>200</codes>
			</con:configuration>
		</con:assertion>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters>
			<entry key="refContrat" value="${CrÃ©er#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
		</con:parameters>
	</con:restRequest>
</con:config>
</con:testStep>
<con:properties/>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RÃ©siliation directe avfw.essentiel - RIN - ImpayÃ©" searchProperties="true" id="5a4a5f1d-cf96-46c0-985f-571c57eacb29">
	<con:settings/>
	<con:testStep type="calltestcase" name="CrÃ©er" id="0e753b17-f96e-4266-92a9-d042519506e6">
		<con:settings/>
		<con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:targetTestCase>cbe5ee85-876a-408f-aef7-a6c8d4207df7</con:targetTestCase>
			<con:properties>
				<con:property>
					<con:name>RefCommande</con:name>
				</con:property>
				<con:property>
					<con:name>RefContrat</con:name>
				<con:value>00000097</con:value></con:property>
			</con:properties>
			<con:returnProperties>
				<con:entry>RefContrat</con:entry>
			</con:returnProperties>
			<con:runMode>SINGLETON_AND_WAIT</con:runMode>
		</con:config>
	</con:testStep>
	<con:testStep type="restrequest" name="Resilier" id="3cd9fc48-c26f-457d-98b2-bd1b615db627">
		<con:settings/>
		<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/resilier" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:restRequest name="Resilier" mediaType="application/json" postQueryString="false">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "politiqueResiliation": {
    "typeResiliation": "RIN",
    "motif": "IMPAYE",
    "commentaire": "Ceci n'est qu'un test factice",
    "fraisResiliation": true,
    "montantResiliation": null,
    "remboursement": false,
    "montantRemboursement": null,
    "penalite": true
    "dateResiliation": null,
  },
  "user": "SoapUITest"
}</con:request>
		<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
			<con:configuration>
				<codes>200</codes>
			</con:configuration>
		</con:assertion>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters>
			<entry key="refContrat" value="${CrÃ©er#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
		</con:parameters>
	</con:restRequest>
</con:config>
</con:testStep>
<con:properties/>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RÃ©siliation future milieu de mois avfw.essentiel" searchProperties="true" id="edeeb2d3-4ce2-4a7e-bd79-e821adb24f2a">
	<con:settings/>
	<con:testStep type="calltestcase" name="CrÃ©er">
		<con:settings/>
		<con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:targetTestCase>cbe5ee85-876a-408f-aef7-a6c8d4207df7</con:targetTestCase>
			<con:properties>
				<con:property>
					<con:name>RefCommande</con:name>
				</con:property>
				<con:property>
					<con:name>RefContrat</con:name>
				</con:property>
			</con:properties>
			<con:returnProperties>
				<con:entry>RefContrat</con:entry>
			</con:returnProperties>
			<con:runMode>SINGLETON_AND_WAIT</con:runMode>
		</con:config>
	</con:testStep>
	<con:testStep type="restrequest" name="Resilier">
		<con:settings/>
		<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/resilier" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:restRequest name="Resilier" mediaType="application/json" postQueryString="false" id="cfff82ba-6c5b-441b-bf3a-cc2c25dfbf93">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "politiqueResiliation": {
    "typeResiliation": "RIC",
    "motif": "REMBOURSEMENT",
    "commentaire": "Ceci n'est qu'un test factice",
    "fraisResiliation": true,
    "montantResiliation": null,
    "remboursement": true,
    "montantRemboursement": null,
    "penalite": false
    "dateResiliation": "2014-01-12",
  },
  "user": "SoapUITest"
}</con:request>
		<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
			<con:configuration>
				<codes>200</codes>
			</con:configuration>
		</con:assertion>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters>
			<entry key="refContrat" value="${CrÃ©er#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
		</con:parameters>
	</con:restRequest>
</con:config>
</con:testStep>
<con:testStep type="manualTestStep" name="Modif Date Serveur">
	<con:settings/>
	<con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
</con:testStep>
<con:properties/>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RÃ©siliation Ã  terme avfw.essentiel" searchProperties="true" id="5172fd7a-b4f9-4b7a-8a31-d5cd031825e4">
	<con:settings/>
	<con:testStep type="calltestcase" name="CrÃ©er">
		<con:settings/>
		<con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:targetTestCase>cbe5ee85-876a-408f-aef7-a6c8d4207df7</con:targetTestCase>
			<con:properties>
				<con:property>
					<con:name>RefCommande</con:name>
				</con:property>
				<con:property>
					<con:name>RefContrat</con:name>
				</con:property>
			</con:properties>
			<con:returnProperties>
				<con:entry>RefContrat</con:entry>
			</con:returnProperties>
			<con:runMode>PARALLELL</con:runMode>
		</con:config>
	</con:testStep>
	<con:testStep type="restrequest" name="Resilier">
		<con:settings/>
		<con:config service="http://si2-srv.si-core.nordnet.fr:8080" resourcePath="/contrat-core/contrat/{refContrat}/resilier" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:restRequest name="Resilier" mediaType="application/json" postQueryString="false" id="cfff82ba-6c5b-441b-bf3a-cc2c25dfbf93">
				<con:settings>
					<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
		</con:settings>
		<con:endpoint>http://si2-srv.si-core.nordnet.fr:8080</con:endpoint>
		<con:request>{
  "politiqueResiliation": {
    "typeResiliation": "RIN",
    "motif": "DEMANDE_DE_NON_RENOUVELLEMENT",
    "commentaire": "Ceci est un test factice",
    "fraisResiliation": true,
    "montantResiliation": null,
    "remboursement": true,
    "montantRemboursement": null,
    "penalite": true
    "dateResiliation": "2015-01-23",
  },
  "user": "SoapUITest"
}</con:request>
		<con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes">
			<con:configuration>
				<codes>200</codes>
			</con:configuration>
		</con:assertion>
		<con:credentials>
			<con:authType>Global HTTP Settings</con:authType>
		</con:credentials>
		<con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
		<con:jmsPropertyConfig/>
		<con:parameters>
			<entry key="refContrat" value="${CrÃ©er#RefContrat}" xmlns="http://eviware.com/soapui/config"/>
		</con:parameters>
	</con:restRequest>
</con:config>
</con:testStep>
<con:testStep type="manualTestStep" name="Modif Date Serveur">
	<con:settings/>
	<con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
</con:testStep>
<con:properties/>
</con:testCase>
<con:properties/>
</con:testSuite>
<con:testSuite name="Processus - Renouvellement - Antivirus">
	<con:settings/>
	<con:runType>SEQUENTIAL</con:runType>
	<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Renouvellement avfw.essentiel" searchProperties="true" disabled="true">

		<con:settings/>
		<con:testStep type="calltestcase" name="Contrat Antivirus">
			<con:settings/>
			<con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
				<con:targetTestCase>cbe5ee85-876a-408f-aef7-a6c8d4207df7</con:targetTestCase>
				<con:properties>
					<con:property>
						<con:name>RefCommande</con:name>
						<con:value>e140f603-e0b7-4674-8068-e9180300f9bd</con:value>
					</con:property>
					<con:property>
						<con:name>RefContrat</con:name>
						<con:value>a9732ede</con:value>
					</con:property>
				</con:properties>
				<con:returnProperties>
					<con:entry>RefCommande</con:entry>
					<con:entry>RefContrat</con:entry>
				</con:returnProperties>
				<con:runMode>SINGLETON_AND_WAIT</con:runMode>
			</con:config>
		</con:testStep>






		<con:testStep type="jdbc" name="Politique Validation">
			<con:settings/>
			<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
				<con:driver>com.mysql.jdbc.Driver</con:driver>
				<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
				<con:query>select * from politiquevalidation 
where id  = 
(select politiqueValidationId from contrat 
  where reference = "${Contrat Antivirus#refContrat}")</con:query>
				<con:assertion type="Simple Contains" name="Frais CrÃ©ation = True">
					<con:configuration>
						<token>&lt;POLITIQUEVALIDATION.FRAISCREATION>1&lt;/POLITIQUEVALIDATION.FRAISCREATION></token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="CheckIsPackagerCreationPossible = False">
			<con:configuration>
				<token>&lt;POLITIQUEVALIDATION.CHECKISPACKAGERCREATIONPOSSIBLE>0&lt;/POLITIQUEVALIDATION.CHECKISPACKAGERCREATIONPOSSIBLE></token>
		<ignoreCase>false</ignoreCase>
		<useRegEx>false</useRegEx>
	</con:configuration>
</con:assertion>
<con:properties/>
</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Contrat">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from contrat 
where reference = "${Contrat Antivirus#refContrat}"</con:query>

		<con:assertion type="XPath Match" name="Date Validation is not null">
			<con:configuration>
				<path>exists(//ResultSet/Row/CONTRAT.DATEVALIDATION/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="DatePreparation Is Not Null">
			<con:configuration>
				<path>exists(//Row/CONTRAT.DATEPREPARATION/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Id Client = 00003870">
			<con:configuration>
				<path>//ResultSet/Row/CONTRAT.IDCLIENT/text()</path>
				<content>00003870</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Politique Validation is not null">
			<con:configuration>
				<path>exists(//ResultSet/Row/CONTRAT.POLITIQUEVALIDATIONID/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="EC Valide">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from elementcontractuel
where contratParent = 
  (select id from contrat
   where reference = "${Contrat Antivirus#refContrat}"
   )</con:query>

		<con:assertion type="XQuery Match" name="Date Validation is not null">
			<con:configuration>
				<path>&lt;Results> 
{ 
for $x in //Row 
order by $x/ELEMENTCONTRACTUEL.NUMEC
return &lt;result>{exists($x/ELEMENTCONTRACTUEL.DATEVALIDATION/text())}&lt;/result> 
}
&lt;/Results></path>
<content>&lt;Results>
  &lt;result>true&lt;/result>
&lt;/Results></content>
<allowWildcards>false</allowWildcards>
</con:configuration>
</con:assertion>
<con:assertion type="XQuery Match" name="Id Adr Livraison">
	<con:configuration>
		<path>&lt;Results> 
{ 
for $x in //Row 
order by $x/ELEMENTCONTRACTUEL.NUMEC
return &lt;result>{$x/ELEMENTCONTRACTUEL.IDADRLIVRAISON/text()}&lt;/result> 
}
&lt;/Results></path>
<content>&lt;Results>
  &lt;result>adrliv1&lt;/result>

&lt;/Results></content>
<allowWildcards>false</allowWildcards>
</con:configuration>
</con:assertion>
<con:assertion type="XQuery Match" name="Id Adr Facturation">
	<con:configuration>
		<path>&lt;Results> 
{ 
for $x in //Row 
order by $x/ELEMENTCONTRACTUEL.NUMEC
return &lt;result>{$x/ELEMENTCONTRACTUEL.IDADRFACTURATION/text()}&lt;/result> 
}
&lt;/Results></path>
<content>&lt;Results>
  &lt;result>685&lt;/result>

&lt;/Results></content>
<allowWildcards>false</allowWildcards>
</con:configuration>
</con:assertion>
<con:assertion type="XQuery Match" name="Remboursable">
	<con:configuration>
		<path>&lt;Results> 
{ 
for $x in //Row 
order by $x/ELEMENTCONTRACTUEL.NUMEC
return &lt;result>{$x/ELEMENTCONTRACTUEL.REMBOURSABLE/text()}&lt;/result> 
}
&lt;/Results></path>
<content>&lt;Results>
  &lt;result>1&lt;/result>
&lt;/Results></content>
<allowWildcards>false</allowWildcards>
</con:configuration>
</con:assertion>
<con:properties/>
</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Tracing - PrÃ©paration &amp; Validation">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * 
from tracage
where referenceContrat = '${Contrat Antivirus#RefContrat}'</con:query>

		<con:assertion type="Simple Contains" name="PrÃ©paration dâun contrat">
			<con:configuration>
				<token>Contrat ${Contrat Antivirus#RefContrat}</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Contrat xxx prÃ©parÃ©">
			<con:configuration>
				<token>Contrat ${Contrat Antivirus#RefContrat} prÃ©parÃ©</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Validation du contrat">
			<con:configuration>
				<token>Validation du contrat ${Contrat Antivirus#RefContrat}</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Contrat xxx validÃ©">
			<con:configuration>
				<token>Contrat ${Contrat Antivirus#RefContrat} validÃ©</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="delay" name="Wait for beginning Livraison">
	<con:settings/>
	<con:config>
		<delay>500</delay>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Bon de Livraison - exists">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from bonpreparation 
where reference = "${Contrat Antivirus#refContrat}"</con:query>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="goto" name="Go Beginning Livraison">
	<con:settings/>
	<con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:condition>
			<con:name>Wait Facturation</con:name>
			<con:type>XPATH</con:type>
			<con:expression>not(//Results/ResultSet/Row/BONPREPARATION.DATEINITIATION/text())</con:expression>
			<con:targetStep>Wait for beginning Livraison</con:targetStep>
		</con:condition>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Bon de Livraison - InitiÃ©">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from bonpreparation 
where reference = "${Contrat Antivirus#refContrat}"</con:query>
		<con:assertion type="XPath Match" name="TypeBonPreparation = Livraison">
			<con:configuration>
				<path>//ResultSet/Row/BONPREPARATION.TYPEBONPREPARATION/text()</path>
				<content>LIVRAISON</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="IdClient">
			<con:configuration>
				<path>//ResultSet/Row/BONPREPARATION.IDCLIENT/text()</path>
				<content>00003870</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>

<con:testStep type="jdbc" name="Elements de Livraison - InitiÃ©">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from elementlivraison 
where bonPreparationParent = 
  (select id 
     from bonpreparation 
    where reference = "${Contrat Antivirus#refContrat}")</con:query>



		<con:assertion type="XPath Match" name="EL InitiÃ©">
			<con:configuration>
				<path>exists(//ResultSet/Row/ELEMENTLIVRAISON.DATEINITIATION/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="NumEC">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.NUMEC/text()</path>
				<content>1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Reference">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.REFERENCE/text()</path>
				<content>${Contrat Antivirus#RefContrat}-1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="AncienCodes Null">
			<con:configuration>
				<path>not(//ResultSet/Row/ELEMENTLIVRAISON.ANCIENCODECOLIS/text())
and
not(//ResultSet/Row/ELEMENTLIVRAISON.ANCIENRETAILERPACKAGERID/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="TypeBonPreparation = Livraison">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.TYPEBONPREPARATION/text()</path>
				<content>LIVRAISON</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Acteur = Pkger">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.ACTEUR/text()</path>
				<content>PACKAGER</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="TypeElmnt = Service">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.ACTEUR/text()</path>
				<content>PACKAGER</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="ReferenceProduit = Antivirus">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.REFERENCEPRODUIT/text()</path>
				<content>avfw.essentiel</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="delay" name="Wait for end Livraison">
	<con:settings/>
	<con:config>
		<delay>500</delay>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Tracing - Initiation" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * 
from tracage
where referenceContrat = '${Contrat Antivirus#RefContrat}'</con:query>

		<con:assertion type="Simple Contains" name="Initiation du BP">
			<con:configuration>
				<token>Livraison du contrat ${Contrat Antivirus#RefContrat} â PrÃ©paration de la livraison</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Initiation de l'EL - antivirus">
			<con:configuration>
				<token>PrÃ©paration de la livraison du produit avfw.essentiel</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Bon de Livraison - TÃ©moin">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from bonpreparation 
where reference = "${Contrat Antivirus#refContrat}"</con:query>
		<con:assertion type="XPath Match" name="Date Initiation">
			<con:configuration>
				<path>exists(//Row/BONPREPARATION.DATEINITIATION/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>

		<con:assertion type="XPath Match" name="Aucune Erreur de Livraison">
			<con:configuration>
				<path>not(//ResultSet/Row/BONPREPARATION.CAUSENONLIVRAISON/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="goto" name="Go End Livraison">
	<con:settings/>
	<con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:condition>
			<con:name>Wait Facturation</con:name>
			<con:type>XPATH</con:type>
			<con:expression>not(//ResultSet/Row/BONPREPARATION.DATELIVRAISONTERMINE/text()) 
and
not(//ResultSet/Row/BONPREPARATION.CAUSENONLIVRAISON/text())</con:expression>
			<con:targetStep>Wait for end Livraison</con:targetStep>
		</con:condition>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Elements de Livraison - LivrÃ©">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from elementlivraison 
where bonPreparationParent = 
  (select id 
     from bonpreparation 
    where reference = "${Contrat Antivirus#refContrat}")</con:query>



		<con:assertion type="XPath Match" name="EL LivrÃ©">
			<con:configuration>
				<path>not(//ResultSet/Row/ELEMENTLIVRAISON.CAUSENONLIVRAISON/text())
and
exists(//ResultSet/Row/ELEMENTLIVRAISON.DATELIVRAISONTERMINE/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="NumEC">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.NUMEC/text()</path>
				<content>1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Reference">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.REFERENCE/text()</path>
				<content>${Contrat Antivirus#RefContrat}-1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="AncienCodes Null">
			<con:configuration>
				<path>not(//ResultSet/Row/ELEMENTLIVRAISON.ANCIENCODECOLIS/text())
and
not(//ResultSet/Row/ELEMENTLIVRAISON.ANCIENRETAILERPACKAGERID/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Code Produit Not Null">
			<con:configuration>
				<path>exists(//ResultSet/Row/ELEMENTLIVRAISON.RETAILERPACKAGERID/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Code Colis Null">
			<con:configuration>
				<path>not(//ResultSet/Row/ELEMENTLIVRAISON.CODECOLIS/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="TypeBonPreparation = Livraison">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.TYPEBONPREPARATION/text()</path>
				<content>LIVRAISON</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Acteur = Pkger">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.ACTEUR/text()</path>
				<content>PACKAGER</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="ReferenceProduit = Antivirus">
			<con:configuration>
				<path>//ResultSet/Row/ELEMENTLIVRAISON.REFERENCEPRODUIT/text()</path>
				<content>avfw.essentiel</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Bon de Livraison - LivrÃ©">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * from bonpreparation 
where reference = "${Contrat Antivirus#refContrat}"</con:query>
		<con:assertion type="XPath Match" name="DateLivraisonTermine Not Null">
			<con:configuration>
				<path>exists(//ResultSet/Row/BONPREPARATION.DATELIVRAISONTERMINE/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="CauseNonLivraison Null">
			<con:configuration>
				<path>not(//ResultSet/Row/BONPREPARATION.CAUSENONLIVRAISON/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="IdClient">
			<con:configuration>
				<path>//ResultSet/Row/BONPREPARATION.IDCLIENT</path>
				<content>00003870</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="TypeBonPreparation = Livraison">
			<con:configuration>
				<path>//ResultSet/Row/BONPREPARATION.TYPEBONPREPARATION</path>
				<content>LIVRAISON</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Dates Workflow">
			<con:configuration>
				<path>exists(//ResultSet/Row/BONPREPARATION.DATEINITIATION/text())
and
exists(//ResultSet/Row/BONPREPARATION.DATEDEBUTPREPARATION/text())
and
exists(//ResultSet/Row/BONPREPARATION.DATEPREPARATION/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="DateRetourTermine Null">
			<con:configuration>
				<path>exists(//ResultSet/Row/BONPREPARATION.DATERETOURTERMINE/text())</path>
				<content>false</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Tracing - Livraison" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * 
from tracage
where referenceContrat = '${Contrat Antivirus#RefContrat}'</con:query>

		<con:assertion type="Simple Contains" name="PrÃ©paration du contrat">
			<con:configuration>
				<token>Contrat ${Contrat Antivirus#RefContrat} validÃ©</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="PrÃ©paration de l'EL antivirus">
			<con:configuration>
				<token>Contrat ${Contrat Antivirus#RefContrat} validÃ©</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Livraison du contrat">
			<con:configuration>
				<token>Livraison du contrat ${Contrat Antivirus#RefContrat} â Fin de livraison</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Livraison de l'EL antivirus">
			<con:configuration>
				<token>Livraison du contrat ${Contrat Antivirus#RefContrat} â Fin de livraison du produit avfwpro-confort-s</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="transfer" name="Transfert Date Livraison" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
			<con:name>DateLivraison</con:name>
			<con:sourceType>ResponseAsXml</con:sourceType>
			<con:sourceStep>Bon de Livraison - TÃ©moin</con:sourceStep>
			<con:sourcePath>//Results/ResultSet/Row/BONPREPARATION.DATELIVRAISONTERMINE/text()</con:sourcePath>
			<con:targetType>DateLivraison</con:targetType>
			<con:targetStep>InfosFacture</con:targetStep>
		</con:transfers>
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true">
			<con:name>ReferenceContrat</con:name>
			<con:sourceType>RefContrat</con:sourceType>
			<con:sourceStep>Contrat Antivirus</con:sourceStep>
			<con:sourcePath/>
			<con:targetType>RefContrat</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
		<con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true">
			<con:name>ReferenceCommande</con:name>
			<con:sourceType>RefCommande</con:sourceType>
			<con:sourceStep>Contrat Antivirus</con:sourceStep>
			<con:targetType>RefCommande</con:targetType>
			<con:targetStep>#TestCase#</con:targetStep>
		</con:transfers>
	</con:config>
</con:testStep>
<con:testStep type="properties" name="InfosFacture" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:properties>
			<con:property>
				<con:name>DateLivraison</con:name>
				<con:value>2014-11-06 16:13:30.0</con:value>
			</con:property>
		</con:properties>
	</con:config>
</con:testStep>
<con:testStep type="delay" name="Wait for end Facturation" disabled="true">
	<con:settings/>
	<con:config>
		<delay>500</delay>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Facturation-exists" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://10.100.105.41:3306/test_saphir?user=test&amp;password=test</con:connectionString>
		<con:query>select * from movement 
where 
--      accountId = '00003870'
--  and productId = 'avfwpro-confort-s'
--  and minute(timediff(now(), create_date)) &lt; 1
  /*and*/ id IN (
  	select movement_idFK 
  	  from movement_appendix_item 
  	 where productReferenceId = '${Contrat Antivirus#RefContrat}'
  )
;</con:query>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="goto" name="Go Facturation" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:condition>
			<con:name>Wait Facturation</con:name>
			<con:type>XPATH</con:type>
			<con:expression>not(//Results/ResultSet/Row/MOVEMENT.ID/text())</con:expression>
			<con:targetStep>Wait for end Facturation</con:targetStep>
		</con:condition>
	</con:config>
</con:testStep>
<con:testStep type="groovy" name="Calcul Periodes" disabled="true">
	<con:settings/>
	<con:config>
		<script>def cal = Calendar.instance

testRunner.testCase.setPropertyValue("dateDebut", String.format('%tF', cal))
log.info testRunner.testCase.getPropertyValue("dateDebut")

cal.roll(Calendar.MONTH, 1)

testRunner.testCase.setPropertyValue("dateFin", String.format('%tF', cal))
log.info testRunner.testCase.getPropertyValue("dateFin")</script>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Tracing - Facturation" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://mysql-bddclients.securitoo.com:3306/topaze?user=gmasy&amp;password=drftgyh8</con:connectionString>
		<con:query>select * 
from tracage
where referenceContrat = '${Contrat Antivirus#RefContrat}'</con:query>

		<con:assertion type="Simple Contains" name="Facturation des frais de crÃ©ation">
			<con:configuration>
				<token>Facturation des frais de crÃ©ation du contrat ${Contrat Antivirus#RefContrat}</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:assertion type="Simple Contains" name="Facturation rÃ©currente">
			<con:configuration>
				<token>Facturation rÃ©currente pour la pÃ©riode du ${#TestCase#DateDebut} au ${#TestCase#DateFin} du contrat ${Contrat Antivirus#RefContrat}</token>
				<ignoreCase>false</ignoreCase>
				<useRegEx>false</useRegEx>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:testStep type="jdbc" name="Facturation-valid" disabled="true">
	<con:settings/>
	<con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:driver>com.mysql.jdbc.Driver</con:driver>
		<con:connectionString>jdbc:mysql://10.100.105.41:3306/test_saphir?user=test&amp;password=test</con:connectionString>
		<con:query>select * from movement 
where accountId = '00003870'
  and minute(timediff(now(), create_date)) &lt; 1
  and id IN (
  	select movement_idFK 
  	  from movement_appendix_item 
  	 where productReferenceId = '${Contrat Antivirus#RefContrat}'
  )
;</con:query>





		<con:assertion type="XPath Match" name="Bill Type = Monthly">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.BILL_TYPE/text()</path>
				<content>MONTHLY</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Billing Group Null">
			<con:configuration>
				<path>not(//ResultSet/Row/MOVEMENT.BILLINGGROUP/text())</path>
				<content>true</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="CanGrouped = True">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.CANGROUPED/text()</path>
				<content>1</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XQuery Match" name="Payment Infos">
			<con:configuration>
				<path><![CDATA[
					<Results>
{
  for $x in //Row
  return <r>
    <payementType>{$x/MOVEMENT.PAYMENT_TYPE/text()}</payementType>
    <payementRef>{$x/MOVEMENT.RUM/text()}</payementRef>
  </r>
}
</Results>]]></path>
				<content><![CDATA[
					<Results>
  <r>
    <payementType>SEPA</payementType>
    <payementRef>R0000012</payementRef>
  </r>
</Results>]]></content>
				<allowWildcards>false</allowWildcards>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="TransactionType = Debit">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.TRANSACTIONTYPE/text()</path>
				<content>DEBIT</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XQuery Match" name="Compta Infos">
			<con:configuration>
				<path><![CDATA[
					<Results>
{
  for $x in //Row
  return <r>
    <vat>{$x/MOVEMENT.VAT_TYPE/text()}</vat>
    <curr>{$x/MOVEMENT.CURRENCY/text()}</curr>
  </r>
}
</Results>]]></path>
				<content><![CDATA[
					<Results>
  <r>
    <vat>R</vat>
    <curr>EUR</curr>
  </r>
</Results>]]></content>
				<allowWildcards>false</allowWildcards>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Amount = 5">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.AMOUNT/text()</path>
				<content>5.000000</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="ProductLabel" disabled="true">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.PRODUCTLABEL/text()</path>
				<content> Abonnement Antivirus Securitoo du ${=new java.text.SimpleDateFormat("yyyy-MM-dd").format(new Date())} au ${=Calendar.instance.get(Calendar.YEAR)+"-"+(int)(Calendar.instance.get(Calendar.MONTH)+2)+"-"+Calendar.instance.get(Calendar.DATE)} (Dossier Produit : ${Contrat Antivirus#RefContrat})</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Date Start">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.STARTFROM/text()</path>
				<content>${#TestCase#DateDebut}</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="Periode - Date End">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.ENDTO/text()</path>
				<content>${#TestCase#DateFin}</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:assertion type="XPath Match" name="ProductId = avfwpro-confort-s">
			<con:configuration>
				<path>//ResultSet/Row/MOVEMENT.PRODUCTID/text()</path>
				<content>avfwpro-confort-s</content>
				<allowWildcards>false</allowWildcards>
				<ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
				<ignoreComments>false</ignoreComments>
			</con:configuration>
		</con:assertion>
		<con:properties/>
	</con:config>
</con:testStep>
<con:loadTest name="Test Create">
	<con:settings/>
	<con:threadCount>50</con:threadCount>
	<con:startDelay>0</con:startDelay>
	<con:sampleInterval>250</con:sampleInterval>
	<con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed>
	<con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange>
	<con:historyLimit>-1</con:historyLimit>
	<con:testLimit>60</con:testLimit>
	<con:limitType>TIME</con:limitType>
	<con:loadStrategy>
		<con:type>Simple</con:type>
	</con:loadStrategy>
	<con:assertion type="Step Status" name="Step Status"/>
	<con:maxAssertionErrors>100</con:maxAssertionErrors>
	<con:cancelExcessiveThreads>true</con:cancelExcessiveThreads>
	<con:strategyInterval>500</con:strategyInterval>
</con:loadTest>
<con:properties>
	<con:property>
		<con:name>RefCommande</con:name>
		<con:value>42358292-6dfa-4882-a652-a39843ee4df9</con:value>
	</con:property>
	<con:property>
		<con:name>RefContrat</con:name>
		<con:value>fb5c1153</con:value>
	</con:property>
	<con:property>
		<con:name>testDate</con:name>
		<con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
	</con:property>
	<con:property>
		<con:name>testDates</con:name>
		<con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
	</con:property>
	<con:property>
		<con:name>dateDebut</con:name>
		<con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014-10-15</con:value>
	</con:property>
	<con:property>
		<con:name>dateFin</con:name>
		<con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014-11-15</con:value>
	</con:property>
</con:properties>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Renouvellement avfw.essentiel - Avant Ã©chÃ©ance" searchProperties="true">
	<con:settings/>
	<con:testStep type="calltestcase" name="CrÃ©er">
		<con:settings/>
		<con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<con:targetTestCase>cbe5ee85-876a-408f-aef7-a6c8d4207df7</con:targetTestCase>
			<con:properties>
				<con:property>
					<con:name>RefCommande</con:name>
				</con:property>
				<con:property>
					<con:name>RefContrat</con:name>
				</con:property>
			</con:properties>
			<con:returnProperties>
				<con:entry>RefContrat</con:entry>
			</con:returnProperties>
			<con:runMode>SINGLETON_AND_WAIT</con:runMode>
		</con:config>
	</con:testStep>
	<con:properties/>
</con:testCase>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Renouvellement avfw.essentiel - AprÃ¨s Ã©chÃ©ance" searchProperties="true">
	<con:settings/>
	<con:properties/>
</con:testCase>
<con:properties/>
</con:testSuite>
<con:properties/>
<con:wssContainer/>
<con:oAuth2ProfileContainer/>
<con:sensitiveInformation/>
</con:soapui-project>